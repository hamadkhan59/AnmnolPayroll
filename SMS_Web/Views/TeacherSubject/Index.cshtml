@model SMS_DAL.SessionSubject

@{
    ViewBag.Title = "Index";
    //Layout = "Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Teacher Subject @((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "Edit" : "Create")</label>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                    </li>
                    <li>
                        @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
                    <fieldset>

                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Teacher <span class="required">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.DropDownList("TeacherId", (IEnumerable<SelectListItem>)ViewBag.TeacherId, new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Class <span class="required">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.DropDownList("ClassId", (IEnumerable<SelectListItem>)ViewBag.ClassId, new { @class = "form-control input-sm", onchange = "getSectionList()", id = "classId" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Section <span class="required">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    <select class="form-control input-sm" name="SectionId" onchange = "getSubjectList()" id="sectionId"></select>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Subject <span class="required">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    <select class="form-control input-sm" name="SubjectId" id="subjectId"></select>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                From Date <span class="required">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.From_Date, new { @type = "date", @class = "form-control input-sm", id = "fromDate" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                                To Date
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.To_Date, new { @type = "date", @class = "form-control input-sm", id = "toDate" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" align="right" for="last-name">
                            </label>
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" align="right" for="last-name" id="lblError" style="color:red">
                            </label>
                        </div>

                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="col-md-9 col-sm-9 col-xs-12">
                                <div class="nav navbar-right">
                                    <input type="submit" value="Save" name="Create" class="btn btn-squar" onclick="return CompareDates()"
                                           style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:none" : "display:block") />
                                </div>
                            </div>
                          
                        </div>
                    </fieldset>
                    @*</form>*@
                }
            </div>
        </div>
    </div>
</div>

 

<div class="x_panel">
    <div class="x_title sc_panel_header">
        <label class="nav navbar-left control-label sc_panel_label" align="left">Teacher Subject List </label>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
            </li>

            <li>
                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
            </li>
        </ul>
        <div class="nav navbar-right col-md-3 col-sm-3 col-xs-12" style="margin-top:2px;">
            <div>
                @Html.DropDownList("TeacherId", (IEnumerable<SelectListItem>)ViewBag.TeacherId, "All", new { @class = "form-control input-sm", onchange = "getTeacherSubjectList()", id = "cbTeacherId" })
            </div>
        </div>
        <label class="nav navbar-right control-label col-md-1 col-sm-1 col-xs-12" style="margin-top:5px;" align="right" for="first-name">
            Teacher
        </label>
        <div class="clearfix"></div>
    </div>

    <div class="x_content" id="searchPanelData">

        <div class="form-group">
            <div class="table-responsive">
                <table class="table table-striped table-bordered" id="classTable">
                    <thead>
                        <tr class="headings">
                            <th class="column-title">
                                Teacher
                            </th>
                            <th class="column-title">
                                Class
                            </th>
                            <th class="column-title">
                                Section
                            </th>
                            <th class="column-title">
                                Subject
                            </th>
                            <th class="column-title">
                                From Date
                            </th>
                            <th class="column-title">
                                To Date
                            </th>
                            <th>
                                Actions
                            </th>

                        </tr>

                    </thead>

                    <tbody style="background-color:white;color:#2A3F54" id="classBody"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script>

    function populateErrors()
    {
        @if(ViewData["Error"] != null)
      {
          if ((int)@ViewData["Error"] == 2)
          {
              <text> showNotification('Teacher Subject is saved succesfully.', 'Success', 'Success') </text>
          }
          else if ((int)@ViewData["Error"] == 11)
          {
              <text> showNotification('Teacher Subject is already assigned to this teacher for the selected dates.', 'Error', 'Error') </text>
          }
            else if ((int)@ViewData["Error"] == 12)
          {
              <text> showNotification('Teacher Subject is already assigned to other teacher for the selected dates.', 'Error', 'Error') </text>
          }
          else if ((int)@ViewData["Error"] == 1)
          {
              <text> showNotification('The Name Field is Required.', 'Error', 'Error') </text>
          }
          else if ((int)@ViewData["Error"] == 420)
          {
              <text> showNotification(' Unable to Save Teacher Subject.', 'Error', 'Error') </text>
          }
          else if ((int)@ViewData["Error"] == 3)
          {
              <text> showNotification('Unable to delete Teacher Subject.', 'Error', 'Error') </text>
          }
          else if ((int)@ViewData["Error"] == 4)
          {
              <text> showNotification('Teacher Subject is deleted succesfully.', 'Success', 'Success') </text>
          }
      }
    }

    window.onload = function (e) {

        populateErrors();
        @if(Model != null )
        {
            <text>
        $('#fromDate').val('@(Model.From_Date.Value.ToString("yyyy-MM-dd"))');//.ToString(), "yyyy-MM-dd")Model.DateOfBirth.Value.ToString("yyyy-MM-dd")));
        $('#toDate').val('@(Model.To_Date.Value.ToString("yyyy-MM-dd"))');
        </text>
        }
        else
        {
            <text>
        $('#fromDate').val('@(DateTime.Now.ToString("yyyy-MM-dd"))');//.ToString(), "yyyy-MM-dd")Model.DateOfBirth.Value.ToString("yyyy-MM-dd")));
        $('#toDate').val('@(DateTime.Now.AddYears(1).ToString("yyyy-MM-dd"))');
        </text>
        }

        getSectionList();
        getTeacherSubjectList();
        $('#classTable').DataTable();
    }

    function getSectionList() {
        var classId = $("#classId").val();
        if(classId.length == 0)
        {
            classId = 0;
        }
        GetClassSection(classId, 0, 'sectionId', 3, 0);
        //first : classId, seccond : load all option or not, third : section dd html id
        //fourth : any call function to call, fifth : sectionId to set in DD
    }

    function getChangeSectionList() {
        var classId = $("#classId").val();
        if (classId.length == 0) {
            classId = 0;
        }
        GetClassSection(classId, 0, 'sectionId', 3, 0);
        //first : classId, seccond : load all option or not, third : section dd html id
        //fourth : any call function to call, fifth : sectionId to set in DD
    }

    function getSubjectList()
    {
        var classId = $("#classId").val();
        var sectionId = $("#sectionId").val();
        $.ajax({
            type: "GET",
            url: AppDetail() + '/api/Common/getClassSubject?classId=' + classId + '&&sectionId=' + sectionId + '&&isLoadAll=0',
            contentType: 'application/json',
            success: function (result) {
                $("#subjectId").html(result);
            },
            error: function (res) {
                showNotification('Unable to load subjects', 'Error', 'Error')
            }
        });
    }

    function CompareDates()
    {
        var fromDate = $('#fromDate').val();
        var toDate = $('#toDate').val();
        if (fromDate < toDate) {
            $("#lblError").text("");
            return true;
        }
        else {
            $("#lblError").text("From date must be less than to date");
            return false;
        }

    }

    function getTeacherSubjectList() {
        var teacherId = $("#cbTeacherId").val();
        $('#classTable > tbody').html("");
        @foreach (var item in (IEnumerable<SMS_DAL.ViewModel.SessionSubjectModel>)ViewData["teacherSubjects"])
        {

            <text>
        if(teacherId == '')
        {
        var tableRow = '<tr>' +
                    '<td>' +
                        '@( item.StaffName)' +
                    '</td>' +
                    '<td>' +
                        '@( item.ClassName)' +
                    '</td>' +
                    '<td>' +
                        '@( item.SectionName)' +
                    '</td>' +
                    '<td>' +
                        '@( item.SubjectName)' +
                    '</td>' +
                    '<td>' +
                        '@( item.From_Date)' +
                    '</td>' +
                    '<td>' +
                        '@( item.To_Date)' +
                    '</td>' +
                    '<td style="color:blue;">' +
                        '@Html.ActionLink("  ", "Delete", new { id = item.Id }, new { onclick = "return ConfirmDelete('Are you sure you wish to delete this Teacher Subjec?', " + item.Id + ", 'TeacherSubject');", style = "color: darkred;font-size: 15px;", title = "Delete", @class = "glyphicon glyphicon-trash" })' +
                    '</td>' +
                '</tr>';
        $("#classTable").find('tbody').append(tableRow);
    }
    else if (teacherId == @(item.TeacherId))
    {
        var tableRow = '<tr>' +
                    '<td>' +
                        '@( item.StaffName)' +
                    '</td>' +
                    '<td>' +
                        '@( item.ClassName)' +
                    '</td>' +
                    '<td>' +
                        '@( item.SectionName)' +
                    '</td>' +
                    '<td>' +
                        '@( item.SubjectName)' +
                    '</td>' +
                    '<td>' +
                        '@( item.From_Date)' +
                    '</td>' +
                    '<td>' +
                        '@( item.To_Date)' +
                    '</td>' +
                    '<td style="color:blue;">' +
                        '@Html.ActionLink("  ", "Delete", new { id = item.Id }, new { onclick = "return ConfirmDelete('Are you sure you wish to delete this Teacher Subjec?', " + item.Id + ", 'TeacherSubject');", style = "color: darkred;font-size: 15px;", title = "Delete", @class = "glyphicon glyphicon-trash" })' +
                    '</td>' +
                '</tr>';
        $("#classTable").find('tbody').append(tableRow);
    }
    </text>
        }
    }
</script>