@model SMS_DAL.DateSheetConfig

@{
    ViewBag.Title = "Index";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Date Sheet Config</label>
                <div class="nav navbar-right">
                    <input type="button" value="Help" name="Help" onclick="@("window.location.href='" + @Url.Action("Index", "Video", new { id = 10}) + "'");"
                            class="btn sc_help_btn btn-xs" />
                </div>
<div class="clearfix"></div>
</div>

<div class="x_content">

    @using (Html.BeginForm())
               {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
    <fieldset>

        <div class="form-group row">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                Contact No <span class="required annotation">*</span>
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div>
                    @Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control input-sm" })
                </div>
            </div>
        </div>
        <div class="form-group row">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                Note
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div>
                    @Html.TextAreaFor(model => model.Notes, 3, 25, new { @class = "form-control input-sm" })
                </div>
            </div>
        </div>


        <div class="ln_solid"></div>
        <div class="form-group">
            <div class="col-md-9 col-sm-9 col-xs-12">
                <div class="nav navbar-right">
                    <input type="submit" id="createBtn" value="Save" name="Create" class="btn btn-squar"
                           style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:none;" : "display:block;") />
                </div>

            </div>
           
        </div>
    </fieldset>
                 @*</form>*@
               }
</div>
</div>
</div>
</div>




<script>

    function populateErrors()
    {
        @if(ViewData["Error"] != null)
       {
           if ((int)@ViewData["Error"] == 2)
           {
               <text> showNotification(' Information is updated succesfully.', 'Success', 'Success') </text>
           }
           else if ((int)@ViewData["Error"] == 420)
           {
               <text> showNotification('Unable to save information', 'Error', 'Error') </text>
           }
       }
    }

    $(document).ready(function () {
        populateErrors();
    });

    
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#stdImage')
                    .attr('src', e.target.result)
                    .width(150)
                    .height(200);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }

    function readURL1(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#stdImage1')
                    .attr('src', e.target.result)
                    .width(150)
                    .height(200);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }

    function readURL2(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#stdImage2')
                    .attr('src', e.target.result)
                    .width(150)
                    .height(200);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }


    function UploadDocs(event)
    {
        var data = new FormData();
       
        var files = $("#imgInp").get(0).files;
        if (files.length > 0) {
            data.append("UploadedImage", files[0]);
        }

        files = $("#imgInp1").get(0).files;
        if (files.length > 0) {
            data.append("UploadedImage1", files[0]);
        }

        files = $("#imgInp2").get(0).files;
        if (files.length > 0) {
            data.append("UploadedImage2", files[0]);
        }

        var ajaxRequest = $.ajax({
            type: "POST",
            url: AppDetail() + "/SchoolConfig/UploadStudentDocs",
            contentType: false,
            processData: false,
            data: data
        });

        $(document).ajaxStop(function() {
            //alert(0)
            if(event.name =="Create")
            {
                document.getElementById("createBtn").onclick = true;
                $("#createBtn").click()
            }
        });

        return false;
    }

</script>