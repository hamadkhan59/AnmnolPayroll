@model SMS_DAL.DateSheet

@{
    ViewBag.Title = "Index";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}


@*<style>
    html, body {
        max-width: 100%;
        overflow-x: hidden;
        overflow-y: hidden;
        /*overflow: scroll;*/
    }
</style>*@

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12" style="overflow-y:hidden;">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Class Date Sheet @((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "Edit" : "Create")</label>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                    </li>
                    <li>
                        @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm("SearchClassDateSheet", "DateSheet", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @*@Html.ValidationSummary(true)*@
                    @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
                    <fieldset>


                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Class
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.DropDownList("ClassId", (IEnumerable<SelectListItem>)ViewBag.ClassId, new { @class = "form-control input-sm", onchange = "getSectionList()", id = "classId" })

                                </div>
                            </div>
                        </div>
                       
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Year <span class="required">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.DropDownList("Year", (IEnumerable<SelectListItem>)ViewBag.YearId, new { @class = "form-control input-sm", @onchange = "GetTermByYear(1)", id = "yearId" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Term <span class="required">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    <select class="form-control input-sm" name="TermId" onchange="GetExamByTerm(1)" id="termId"></select>
                                    <input type="hidden" id="branchId" value="@ViewData["branchId"]" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Exams <span class="required">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    <select class="form-control input-sm" name="ExamId" id="examId"></select>
                                </div>
                            </div>
                        </div>

                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="col-md-9 col-sm-9 col-xs-12">
                                <div class="nav navbar-right">
                                    <input type="submit" value="Search" name="Create" class="btn btn-squar" />
                                </div>
                            </div>
                          
                        </div>
                    </fieldset>
                    @*</form>*@
                }
            </div>
        </div>
    </div>
</div>

<script>

    function populateErrors()
    {
        @if(ViewData["Error"] != null)
        {
            if ((int)@ViewData["Error"] == 2)
            {
                <text> showNotification(' Date Sheet is saved succesfully.', 'Success', 'Success') </text>
            }
            else if ((int)@ViewData["Error"] == 20)
            {
                <text> showNotification(' Date Sheet is deleted succesfully.', 'Success', 'Success') </text>
            }
        else if ((int)@ViewData["Error"] == 420)
            {
                <text> showNotification('Unable to Save Date Sheet.', 'Error', 'Error') </text>
            }
             else if ((int)@ViewData["Error"] == 1420)
            {
                <text> showNotification('Unable to Delete Date Sheet.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 210)
            {
                <text> showNotification('Unable to create pdf as the current class has no student.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 100)
            {
                <text> showNotification('Total Exams perecentage is exceding from 100.', 'Error', 'Error') </text>
            }
        else if ((int)@ViewData["Error"] == 3)
            {
                <text> showNotification('Unable to delete Exam.', 'Error', 'Error') </text>
            }
        else if ((int)@ViewData["Error"] == 4)
            {
                <text> showNotification('Exam is deleted succesfully.', 'Success', 'Success') </text>
            }
        }
    }



    window.onload = function (e) {
        ShowSearchPanel(@((ViewData["dateSheet"] == null) ? 0 : 1));
        populateErrors();

        var d = new Date();
        var month = d.getMonth();
        var year = d.getFullYear();

        $('#classTable').DataTable( {
            "lengthMenu": [[-1], ["All"]],
            paging: false, searching : false
        } );

        var classId = '@(ViewData["GlobalClassId"] == null ? 0 : (int)ViewData["GlobalClassId"])';
        var yearId = '@(ViewData["GlobalYearId"] == null ? 0 : (int)ViewData["GlobalYearId"])';
        if(classId != 0)
        {
            $("#classId").val(classId);
        }
        if(yearId != 0)
        {
            $("#yearId").val(yearId);
        }
        GetTermByYear(1);
    }

    function GetTermByYear(payload) {
        var yearId = $('#yearId').val();
        var branchId = $('#branchId').val();
        var termId = '@(ViewData["GlobalTermId"] == null ? 0 : (int)ViewData["GlobalTermId"])';
        var tempYearId = '@(ViewData["GlobalYearId"] == null ? 0 : (int)ViewData["GlobalYearId"])';
        if(yearId == tempYearId)
        {
            if(termId != 0)
            {
                $("#termId").val(termId);
            }
        }
        else
        {
            termId = 0;
        }

        GetTermsByYear(yearId, 0, 'termId', branchId, payload, termId);
    }


    function EnableGridRow(index)
    {
        var tableBody = document.getElementById("classBody");
        var rows = tableBody.getElementsByTagName("tr");
        var tdObj = rows[index].getElementsByTagName("td")[1];
        if(document.getElementById("checkbox" + index).checked)
        {
            document.getElementById("datePicker" + index).readOnly = false;
            document.getElementById("startTime" + index).readOnly = false;
            document.getElementById("endTime" + index).readOnly = false;
            document.getElementById("center" + index).readOnly = false;
        }
        else
        {
            document.getElementById("datePicker" + index).readOnly = true;
            document.getElementById("startTime" + index).readOnly = true;
            document.getElementById("endTime" + index).readOnly = true;
            document.getElementById("center" + index).readOnly = true;
        }
        //alert(document.getElementById("checkbox" + index).checked);

    }

    function setPrint(printVal)
    {
        $("#isPrint").val(printVal);
        if(printVal == 4)
        {
            ConfirmAction('Are you sure, you want to delete the date sheet?', 'deleteClassDateSheet');
            return false;
        }
        return true;
    }

    function GetExamByTerm(payload) {
        var termId = $('#termId').val();
        var branchId = $('#branchId').val();
        var examTypeId = '@(ViewData["GLobalExamId"] == null ? 0 : (int)ViewData["GLobalExamId"])';
        var tempTermId = '@(ViewData["GlobalTermId"] == null ? 0 : (int)ViewData["GlobalTermId"])';
        if(termId == tempTermId)
        {
            if(examTypeId != 0)
            {
                $("#examId").val(examTypeId);
            }
        }
        else
        {
            examTypeId = 0;
        }

        GetExamsByTerm(termId, 0, 'examId', branchId, payload, examTypeId);
    }

</script>

<div class="row" id="searchPanelData" style="display:none;">
    <div class="col-md-12 col-sm-12 col-xs-12">
        @using (Html.BeginForm("SaveClassDateSheet", "DateSheet", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <fieldset>
                <div class="x_panel">
                    <div class="x_title sc_panel_header">
                        <label class="nav navbar-left control-label sc_panel_label" align="left">Class Date Sheet Detail </label>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                            </li>

                            <li>
                                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>

                    <div class="x_content">

                        <input type="hidden" class="custom-control-input" name="IsPrint" value="0" style="width:20px;height:20px;" id="isPrint">
                        <div class="form-group">
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered" id="classTable">
                                    <thead>
                                        <tr class="headings">
                                            <th>
                                            </th>
                                            <th>
                                                Subject
                                            </th>
                                            <th>
                                                Date Of Exam
                                            </th>
                                            <th>
                                                Time
                                            </th>
                                            <th>
                                                Place
                                            </th>

                                        </tr>

                                    </thead>
                                    <tbody style="background-color:white;color:#2A3F54" id="classBody">
                                        @if (ViewData["dateSheet"] != null)
                                        {
                                            int i = 0, dc = 0;
                                            foreach (var item in (IEnumerable<SMS_DAL.ViewModel.DateSheetModel>)ViewData["dateSheet"])
                                            {
                                                <tr>
                                                    <td>
                                                        <input type="checkbox" style="width:20px;height:20px" onchange="EnableGridRow(@i)" id="@("checkbox" + i)" />
                                                    </td>
                                                    <td>
                                                        <input type="text" name="subjectIds" value="@(item.SubjectId)" hidden="hidden" />
                                                        <input type="text" name="classIds" value="@(item.ClassId)" hidden="hidden" />
                                                        <input type="text" name="sectionIds" value="@(item.SectionId)" hidden="hidden" />
                                                        <input type="text" name="examIds" value="@(item.ExamId)" hidden="hidden" />
                                                        @Html.TextBoxFor(modelItem => item.SubjectName, new { Name = "SubjectName", @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                                    </td>
                                                    <td>
                                                        @if (item.ExamDate == null)
                                                        {
                                                            if (DateTime.Now.AddDays(dc).DayOfWeek == DayOfWeek.Sunday)
                                                            {
                                                                dc++;
                                                            }
                                                            else if (DateTime.Now.AddDays(dc).DayOfWeek == DayOfWeek.Saturday)
                                                            {
                                                                dc++;
                                                                dc++;
                                                            }
                                                            <input type="date" value="@(DateTime.Now.AddDays(dc).ToString("yyyy-MM-dd"))" id="@("datePicker" + i)" name="ExamDate" readonly="readonly" />
                                                        }
                                                        else
                                                        {
                                                            <input type="date" value="@item.ExamDate.Value.ToString("yyyy-MM-dd")" id="@("datePicker" + i)" name="ExamDate" readonly="readonly" />
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (item.ExamTime == null)
                                                        {
                                                            <input type="time" name="startTimes" value="09:00" id="@("startTime" + i)" readonly="readonly" />
                                                        }
                                                        else
                                                        {
                                                            <input type="time" name="startTimes" value="@(item.ExamTime.Split('-')[0])" id="@("startTime" + i)" readonly="readonly">
                                                        }
                                                        -
                                                        @if (item.ExamTime == null)
                                                        {
                                                            <input type="time" name="endTimes" value="12:00" id="@("endTime" + i)" readonly="readonly">
                                                        }
                                                        else
                                                        {
                                                            <input type="time" name="endTimes" value="@(item.ExamTime.Split('-')[1])" id="@("endTime" + i)" readonly="readonly">
                                                        }
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(modelItem => item.Center, new { @class = "form-control input-sm", Name = "Center", @style = "background-color: transparent;", @readonly = "readonly", @id = ("center" + i) })
                                                    </td>
                                                </tr>
                                                        i++;
                                                        dc++;
                                            }
                                        }
                                    </tbody>
                                </table>


                            </div>
                            <div class="form-group row">
                                <div class="nav navbar-right">
                                    <input type="submit" value="Notice Board Section Wise Pdf" onclick="setPrint(3)" class="btn btn-squar" />
                                    <input type="submit" value="Notice Board Class Wise Pdf" onclick="setPrint(2)" class="btn btn-squar" />
                                    <input type="submit" value="Create Students Pdf" onclick="setPrint(1)" class="btn btn-squar" />
                                    <input type="submit" value="Delete" onclick="return setPrint(4)" id="deleteClassDateSheet" class="btn btn-squar" />
                                    <input type="submit" value="Save" onclick="return ConfirmAction('Are you sure, you want to save the date sheet?', 'saveClassDateSheet');" id="saveClassDateSheet" class="btn btn-squar" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>

        }
    </div>
</div>
