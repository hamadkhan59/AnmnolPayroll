@model SMS_DAL.SmsMessage

@{
    ViewBag.Title = "Index";
    //Layout = "Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">SMS Message Template @((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "Edit" : "Create")</label>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                    </li>
                    <li>
                        @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
                    <fieldset>
                       
                        <div class="form-group row">
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Message Params <span class="required">*</span>
                            </label>
                            <div class="col-md-5 col-sm-5 col-xs-12">
                                <div class="form-group" style="height:300px;">
                                    <div class="table-responsive" style="height:300px;">
                                        <table class="table table-striped table-bordered" id="classTable">
                                            <thead>
                                                <tr class="headings">
                                                    <th>
                                                    </th>
                                                    <th>
                                                        Param Name
                                                    </th>
                                                    <th>
                                                        Param Detail
                                                    </th>
                                                    
                                                </tr>

                                            </thead>
                                            <tbody style="background-color:white;color:#2A3F54" id="classBody">
                                                @foreach (var item in (IEnumerable<SMS_DAL.SmsParam>)ViewData["SMSParams"])
                                                {
                                                    <tr>
                                                        <td>
                                                            <button type="button" class="copy-btn btn btn-link">
                                                                <span class="glyphicon glyphicon-copy"></span>
                                                            </button>
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.ParamName)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.ParamDetail)
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div class="row">
                                    <label class="control-label col-md-2 col-sm-2 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                        Message Name <span class="required">*</span>
                                    </label>
                                    <div class="col-md-10 col-sm-10 col-xs-12">
                                        <div>
                                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <label class="control-label col-md-2 col-sm-2 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                        Message Text <span class="required">*</span>
                                    </label>
                                    <div class="col-md-10 col-sm-10 col-xs-12">
                                        <div>
                                            @Html.TextAreaFor(model => model.Message, 8, 25, new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                </div>

                            </div>

                        </div>


                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="col-md-11 col-sm-11 col-xs-12">
                            </div>
                            <div class="col-md-1 col-sm-1 col-xs-12">
                                <input type="submit" value="Save" name="Create" class="btn btn-squar" 
                                       style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:none;" : "display:block;") />
@*                                <button type="button" class="btn btn-xs btn-info btn-squar" onclick="GetViewMessage(@Model.Message)" data-toggle="modal" data-target=".bs-example-modal-sm">View</button>*@
                                @*<input type="submit" value="View Sample Sms" name="ViewSample" class="btn btn-squar" />*@
                                <input type="submit" value="Save" name="Update" class="btn btn-squar"
                                       style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:block;" : "display:none;") />
                                @*<input type="submit" value="View Sample Sms" name="ViewSample" class="btn btn-squar"
                                       style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:none;" : "display:block;") />*@
                            </div>
                        </div>
                    </fieldset>
                    @*</form>*@
                }
            </div>
        </div>
    </div>
</div>


<div class="x_panel">
    <div class="x_title sc_panel_header">
        <label class="nav navbar-left control-label sc_panel_label" align="left">Message Tamplate List </label>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
            </li>

            <li>
                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
            </li>
        </ul>
        <div class="clearfix"></div>
    </div>

    <div class="x_content">

        <div class="form-group">
            <div class="table-responsive">
                <table class="table table-striped table-bordered" id="classTable1">
                    <thead>
                        <tr class="headings">
                            <th>
                            </th>
                            <th>
                                Message Name
                            </th>
                            <th>
                                Message Text
                            </th>
                            <th style="min-width:100px;">
                            </th>
                        </tr>

                    </thead>
                    <tbody style="background-color:white;color:#2A3F54" id="classBody">
                        @foreach (var item in (IEnumerable<SMS_DAL.SmsMessage>)ViewData["SMS Message"])
                        {
                            <tr>
                                <td>
                                    <button type="button" class="btn btn-xs btn-squar" onclick="GetViewMessageDetail(@item.Id)" id="@("checkbox" + @item.Id)" name="messageId" value="@item.Id" data-toggle="modal" data-target=".bs-example-modal-sm">View</button>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Message)
                                </td>
                                <td style="min-width:100px;">
                                    @*<button type="button" class="btn btn-xs btn-info btn-squar" onclick="GetViewMessageDetail(@item.Id)" data-toggle="modal" data-target=".bs-example-modal-sm">View</button>*@
                                    @Html.ActionLink("  ", "Index", new { id = item.Id }, new { style = "color: green;font-size: 15px;", title = "Edit", @class = "glyphicon glyphicon-edit" }) 
                                    @Html.ActionLink("  ", "Delete", new { id = item.Id }, new { onclick = "return ConfirmDelete('Are you sure you wish to delete this Sms Message?', " + item.Id + ", 'SmsMessage');", style = "color: darkred;font-size: 15px;", title = "Delete", @class = "glyphicon glyphicon-trash" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm " tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-sm sc_panel_squar" style="width:600px;margin-top:10%;">
        <div class="modal-content sc_panel_squar">
            <div class="modal-header" style="background-color:#151F2A;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" style="color:white;">×</span>
                </button>
                <h4 class="modal-title" style="color:white;font-weight:bold" id="myModalLabel2">View Message</h4>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-striped jambo_table bulk_action" id="allownceTable" name="model">
                        <thead>

                        </thead>
                        <tbody style="background-color:white;color:#2A3F54" id="classBody"></tbody>
                    </table>
                </div>
            </div>

            <div class="modal-footer" style="height:80px;">
                <button type="button" class="btn btn-lg btn-squar" data-dismiss="modal"> <span class="glyphicon glyphicon-ok"></span> Close</button>
            </div>
            
        </div>
    </div>
</div>

<script>

    $(".copy-btn").click(function() {
        let tmpElement = $('<textarea style="opacity:0;"></textarea>');
        var i = 0;
        let parent = $(this).closest('td').siblings().each(function(){
            if(i == 0)
            {
                tmpElement.text($(this).text().trim());
            }
            i++;
        });
  
        tmpElement.prependTo($('body')).focus().select();
        document.execCommand("copy");
        tmpElement.remove();
    });

    function GetViewMessageDetail(i)
    {

        $("#allownceTable > tbody").html("");
        var allownceCount = 0;
        var messageId =  $("#checkbox"+i).val();
        $.post( AppDetail() +"/SmsMessage/GetViewMessageDetail",
            { messageId: messageId },
            function (response) {
                for (var i = 0; i < response.length; i++) {
                    
                    var tableRow = '<tr class="even pointer" id="allRow' + allownceCount + '">' +
                        '<td style="background-color:#151F2A;color:white;font-weight:bold;min-width:150px;max-width:150px;">' + response[i][0] + '</td>' +
                        '<td>' + response[i][1] + '</td>';

                    $("#allownceTable").find('tbody').append(tableRow);
                    allownceCount++;
                }
            }
         );
    }


    function populateErrors()
    {
        @if(ViewData["Error"] != null)
        {
            if ((int)@ViewData["Error"] == 1)
            {
                <text> showNotification(' The Name Field is Required.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 1)
            {
                <text> showNotification('The Name Field is Required.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 421)
            {
                <text> showNotification('SMS Message Name is already Exist.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 422)
            {
                <text> showNotification('SMS Message Code is already Exist.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 11)
            {
                <text> showNotification(' SMS Message Login Id is already Exist.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 1421)
            {
                <text> showNotification('SMS Message Name is already Exist.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 1422)
            {
                <text> showNotification('SMS Message Code is already Exist.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 111)
            {
                <text> showNotification('SMS Message Login Id is already Exist.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 3)
            {
                <text> showNotification('SMS Message to delete SMS Message.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 420)
            {
                <text> showNotification('SMS Message to Save SMS Message.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 521)
            {
                <text> showNotification('SMS Message Name can not be empty.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 522)
            {
                <text> showNotification('SMS Message Text can not be empty.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 523)
            {
                <script>alert("asasasasaaas")</script>
            }
            else if ((int)@ViewData["Error"] == 2)
            {
                <text> showNotification('SMS Message is saved succesfully.', 'Success', 'Success') </text>
            }
            else if ((int)@ViewData["Error"] == 4)
            {
                <text> showNotification('SMS Message is deleted succesfully.', 'Success', 'Success') </text>
            }
        }
    }


    window.onload = function (e) {
        populateErrors();
 $('#classTable1').DataTable( {
            paging: false, searching : false
        } );
    }

    function VerifyPassword() {
        var password = $("#txtPassword").val();
        var confirmPassword = $("#txtConfirmPassword").val();

        if (password == '' && confirmPassword == '') {
            showNotification('Please enter password.', 'Error', 'Error')
            //document.getElementById('lblError').innerHTML = 'Please enter password';
            return false;
        }

        if (password == confirmPassword) {
            document.getElementById('lblError').innerHTML = '';
            return true;
        }
        else {
            showNotification('Password is not matched.', 'Error', 'Error')
            //document.getElementById('lblError').innerHTML = 'Password is not matched';
            return false;
        }
    }

    function getUsersByGroup() {
        var rows = $('table > tbody tr');
        var groupId = $("#cbGroupId").val();
        if (groupId == null || groupId == '') {
            rows.show();
        }
        else {
            var showRows = rows.filter('.' + groupId).show();
            rows.not(showRows).hide();
        }
    }

</script>