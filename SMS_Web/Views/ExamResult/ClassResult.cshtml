@model List<SMS_DAL.ViewModel.ExamResultViewModel>

@{
    ViewBag.Title = "Index";
    //Layout = "Views/Shared/_Layout.cshtml";
}



<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Class Result</label>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                    </li>
                    <li>
                        @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm("SearchClassSheet", "ExamResult", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @*@Html.ValidationSummary(true)*@
                    @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
                    <fieldset>

                        <div class="form-group row">
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Year
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    @Html.DropDownList("Year", (IEnumerable<SelectListItem>)ViewBag.YearId, new { @class = "form-control input-sm", @onchange = "GetTermByYear(1)", id = "yearId" })
                                </div>
                            </div>
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                @Html.ActionLink("Terms", "Index", "ExamTerm", new { id = 0 }, new { title = "Click to add new Term" })
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <select class="form-control input-sm" name="TermId" onchange="GetExamByTerm(1)" id="termId"></select>
                                    <input type="hidden" id="branchId" value="@ViewData["branchId"]" />
                                </div>
                            </div>
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                @Html.ActionLink("Exams", "Index", "ExamType", new { id = 0 }, new { title = "Click to add new Exam" })
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <select class="form-control input-sm" name="ExamTypeId" id="examId"></select>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Class
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    @Html.DropDownList("ClassId", (IEnumerable<SelectListItem>)ViewBag.ClassId, new { @class = "form-control input-sm", onchange = "getChangeSectionList()", id = "classId" })
                                </div>
                            </div>
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Section
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <select class="form-control input-sm" name="SectionId" id="sectionId"></select>
                                </div>
                            </div>
                        </div>



                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="nav navbar-right">
                                <input type="submit" value="Create Sheet" name="Create" class="btn btn-squar" />
                            </div>
                        </div>
                    </fieldset>
                    @*</form>*@
                }
            </div>
        </div>
    </div>
</div>

<script>

    var gradeList = [];

    function populateErrors()
    {
        @if(ViewData["Error"] != null)
       {
           if ((int)@ViewData["Error"] == 2)
           {
               <text> showNotification('Marks Sheet is saved succesfully.', 'Success', 'Success') </text>
           }
        else if ((int)@ViewData["Error"] == 20)
           {
               <text> showNotification('Sms is sent succesfully to student(s).', 'Success', 'Success') </text>
           }
       else if ((int)@ViewData["Error"] == 11)
           {
               <text> showNotification('Fee Head is already added to Chalaln.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 420)
           {
               <text> showNotification('Unable to Create Class Sheet.', 'Error', 'Error') </text>
           }
        else if ((int)@ViewData["Error"] == 111)
           {
               <text> showNotification('Please add the result for all the subjects against the newly admitted students to get the result.', 'Error', 'Error') </text>
           }
            else if ((int)@ViewData["Error"] == 1420)
           {
               <text> showNotification('Unable to send sms to Student(s).', 'Error', 'Error') </text>
           }
           else if ((int)@ViewData["Error"] == 100)
           {
               <text> showNotification('Total Exams perecentage is exceding from 100.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 3)
           {
               <text> showNotification('Unable to delete Exam.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 4)
           {
               <text> showNotification('Exam is deleted succesfully.', 'Success', 'Success') </text>
           }
       }
    }


    $(document).ready(function () {
        populateErrors();
        ShowSearchPanel(@((Model == null || Model.Count == 0) ? 0 : Model.Count));
        var d = new Date();
        var month = d.getMonth();
        var year = d.getFullYear();
        GetGradeList();

        var classId = '@(ViewData["GlobalClassId"] == null ? 0 : (int)ViewData["GlobalClassId"])';
        var yearId = '@(ViewData["GlobalYearId"] == null ? 0 : (int)ViewData["GlobalYearId"])';
        if(classId != 0)
        {
            $("#classId").val(classId);
        }
        if(yearId != 0)
        {
            $("#yearId").val(yearId);
        }
        getSectionList();
        GetTermByYear(1);

        DisplayClassSheet();
        PopulateGridConfigData();
        $('#issuedDate').val('@DateTime.Now.ToString("yyyy-MM-dd")');
    });


    function getSectionList() {
        var classId = $("#classId").val();
        if(classId.length == 0)
        {
            classId = 0;
        }
        GetClassSection(classId, 0, 'sectionId', 2, 0);
        //first : classId, seccond : load all option or not, third : section dd html id
        //fourth : any call function to call, fifth : sectionId to set in DD
    }

    function getChangeSectionList() {
        var classId = $("#classId").val();
        if (classId.length == 0) {
            classId = 0;
        }
        GetClassSection(classId, 0, 'sectionId', 2, 0);
        //first : classId, seccond : load all option or not, third : section dd html id
        //fourth : any call function to call, fifth : sectionId to set in DD
    }

    function setPrevSearchVals()
    {
        var sectionId = '@(ViewData["GlobalSectionId"] == null ? 0 : (int)ViewData["GlobalSectionId"])';
        var classId = '@(ViewData["GlobalClassId"] == null ? 0 : (int)ViewData["GlobalClassId"])';
        var tempClass = $("#classId").val();
        if(classId == tempClass)
        {
            if(sectionId != 0)
            {
                $("#sectionId").val(sectionId);
            }
        }
    }

    function GetTermByYear(payload) {
        var yearId = $('#yearId').val();
        var branchId = $('#branchId').val();
        var termId = '@(ViewData["GlobalTermId"] == null ? 0 : (int)ViewData["GlobalTermId"])';
        var tempYearId = '@(ViewData["GlobalYearId"] == null ? 0 : (int)ViewData["GlobalYearId"])';
        if(yearId == tempYearId)
        {
            if(termId != 0)
            {
                $("#termId").val(termId);
            }
        }
        else
        {
            termId = 0;
        }

        GetTermsByYear(yearId, 0, 'termId', branchId, payload, termId);
    }


    function GetExamByTerm(payload) {
        var termId = $('#termId').val();
        var branchId = $('#branchId').val();
        var examTypeId = '@(ViewData["GLobalExamId"] == null ? 0 : (int)ViewData["GLobalExamId"])';
        var tempTermId = '@(ViewData["GlobalTermId"] == null ? 0 : (int)ViewData["GlobalTermId"])';
        if(termId == tempTermId)
        {
            if(examTypeId != 0)
            {
                $("#examId").val(examTypeId);
            }
        }
        else
        {
            examTypeId = 0;
        }

        GetExamsByTerm(termId, 0, 'examId', branchId, payload, examTypeId);
    }

    function DisplayClassSheet() {
        var rollnumber = "";
        var isDisplay = true;
        var totalPass = [];
        var totalFail = [];
        var totalObtMarks = [];
        var stdPercentage = [];
        var positions = [];
        var resultPercentage = [];
        var studentCount = 0;
        var totalClassMarks = 0;
        var tempCount = 0;
        var failCount = 0;
        var passCount = 0;

        @if (Model != null)
        {
            foreach (var item in (IEnumerable<SMS_DAL.ViewModel.ExamResultViewModel>)Model)
            {
                <text>
        totalObtMarks[studentCount] = 0;
        if(studentCount == 0)
        {
            rollnumber = @(item.RollNumber == null ? "009" : item.RollNumber);
            studentCount++;
        }
        else
        {
            var tempRollNo = @(item.RollNumber == null ? "009" : item.RollNumber);
            if(rollnumber == tempRollNo)
            {
                isDisplay = false;
            }

            if(isDisplay)
                studentCount++;
        }
        var row =  '<tr id='+studentCount+'>' +
               '<td >' + '<p style="font-size:11px;">' + '@(item.RollNumber == null ? "009" : item.RollNumber)' + ' <input type="hidden" name="StudentId" value="'+@(item.StudentId)+'"></p>' +
            '</td >' +
            '<td >' + '<p style="font-size:11px;">' + '@(item.AdmissionNo == null ? "009" : item.AdmissionNo)' + '</p>' +
            '</td >' +
            '<td >' +
                '<p style="font-size:11px;">' + '@Html.ActionLink(item.RollNumber == null ? "009" : item.Name, "StudentResult", new { id = item.StudentId, examTypeId = item.ExamTypeId, position = item.Position }, new { style = "color: blue;", title = "View Student Result" })' + '</p>' +
            '</td >' +
           '<td >' +
                '<p style="font-size:11px;">' + '@(item.FatherName)' + '</p>' +
            '</td>';
        if(isDisplay)
            $("#tableData").append(row);
        </text>
            }

            <text>
        $("#tableData").append('<tr id='+"totalLine"+'>  <td> </td><td> </td><td></td><td></td>');
        $("#tableData").append('<tr id='+"totalMarks"+'>  <td> </td><td> </td><td></td><td><p style="font-size:11px;">Total Marks </p></td>');
        //$("#tableData").append('<tr id='+"passPercentage"+'> <td> </td> <td> </td> <td> </td><td> </td><td></td><td><p style="font-size:11px;">Pass Percentage </p></td>');
        $("#tableData").append('<tr id='+"totalPass"+'>  <td> </td><td> </td><td></td><td><p style="font-size:11px;">Total Pass </p></td>');
        $("#tableData").append('<tr id='+"totalFail"+'>  <td> </td><td> </td><td></td><td><p style="font-size:11px;">Total Fail </p></td>');
        $("#tableData").append('<tr id='+"resultPersentage"+'>  <td> </td><td> </td><td></td><td><p style="font-size:11px;">Result Percentage </p></td>');
        </text>
            int stCount = Model.Count / ((List<string>)ViewData["courseNameList"]).Count;
            int totalCount = 0;
            foreach (var item in (IEnumerable<SMS_DAL.ViewModel.ExamResultViewModel>)Model)
            {
                <text>
        tempCount++;
        if(tempCount == 1)
        {
            $('#tableHead').append('<th> <p style="font-size:11px;">'+'@(((List<string>)ViewData["courseNameList"])[totalCount/stCount])'+' </p></th>');

        }

        //var row = ' <td > <p style="font-size:11px;">' + item.ObtMarks.deci+ '</p></td>';
        var row = ' <td > <p style="font-size:11px;">' + Number(@item.ObtMarks).toFixed(2).toString()+ '</p></td>';
        totalObtMarks[tempCount - 1] = totalObtMarks[tempCount - 1] + @(item.ObtMarks);
        positions[tempCount - 1] = @(item.Position);
        stdPercentage[tempCount - 1] =  @(item.actualPercentage);
        var totalMarksTemp = @(((List<int>)ViewData["totalMarksList"])[totalCount / stCount]);
        @*var passPercentageTemp = @(((List<int>)ViewData["passPerecentageList"])[totalCount / stCount]);*@

        //var percentageMarks = totalMarksTemp * (passPercentageTemp/100)
        var grade = GetGrade('@item.ObtMarks', totalMarksTemp);

        if(grade != "F")
            passCount++;
        else
            failCount++;
        $('#'+tempCount).append(row);

        if(studentCount == tempCount)
        {
            totalClassMarks = totalClassMarks + totalMarksTemp;
            tempCount = 0;
            $('#totalLine').append(' <td > </td>');
            $('#totalMarks').append(' <td ><p style="font-size:11px;"> '+totalMarksTemp +'</p></td>');
            //$('#passPercentage').append(' <td ><p style="font-size:11px;"> '+passPercentageTemp +'</p></td>');
            $('#totalPass').append(' <td > <p style="font-size:11px;">'+passCount +'</p></td>');
            $('#totalFail').append(' <td > <p style="font-size:11px;">'+failCount +'</p></td>');
            var reultPersentage = ((passCount) / (passCount + failCount)) * 100;
            $('#resultPersentage').append(' <td > <p style="font-size:11px;">'+reultPersentage.toFixed(2) +'</p></td>');
            passCount = failCount = 0;
        }
        @{totalCount++;};
        </text>
             }

                <text>
        $('#tableHead').append('<th><p style="font-size:11px;">Obt Total</p></th>');
        $('#tableHead').append('<th><p style="font-size:11px;">Grade</p></th>');
        $('#tableHead').append('<th><p style="font-size:11px;">Percentage</p></th>');
        $('#tableHead').append('<th><p style="font-size:11px;">Position</p></th>');
        //$('#tableHead').append('<th style="width:100px;">Absent Count</th>');
        for(var i = 0; i < studentCount; i++)
        {
            var row = '<td><p style="font-size:11px;">' +totalObtMarks[i].toFixed(2)+ '</p></td> <td><p style="font-size:11px;">' + GetGrade(totalObtMarks[i], totalClassMarks) + '</p></td> <td><p style="font-size:11px;">' + stdPercentage[i] + '</p> </td> <td><p style="font-size:11px;">' + positions[i] + '</p> <input  type="hidden"  name="Position" value="' + positions[i] + '"></td>'
            $('#'+(i + 1)).append(row);
        }
        $('#totalLine').append(' <td > </td> <td > </td><td > </td> <td > </td>');
        $('#totalMarks').append(' <td > <p style="font-size:11px;">'+ totalClassMarks +'</p></td> <td > </td><td > </td> <td > </td>');
        //$('#passPercentage').append(' <td > </td> <td > </td>');
        $('#totalFail').append(' <td > </td> <td > </td><td > </td> <td > </td>');
        $('#totalPass').append(' <td > </td> <td > </td><td > </td> <td > </td>');
        $('#resultPersentage').append(' <td > </td> <td > </td><td > </td> <td > </td>');

        </text>

            }


    }

    function PopulateGridConfigData()
    {
        var gradeConfig = 0;
        var posConfig = 0;
        var perConfig = 0;

        var x = document.getElementsByTagName("th");
        for (var i = 0; i < x.length; i++) {
            if(x[i].innerHTML.trim().indexOf("Grade") >= 0)
            {
                gradeConfig = i+1;
            }
            if(x[i].innerHTML.trim().indexOf("Percentage") >= 0)
            {
                perConfig = i+1;
            }
            if(x[i].innerHTML.trim().indexOf("Position") >= 0)
            {
                posConfig = i+1;
            }
        }


        @if (Model != null && Model.Count > 0)
        {
            if((string)ViewData[SMS_Web.Helpers.SysConfig.EC_GRADE_FLAG] == "No")
            {
                <text>
                $("#classTable th:nth-child("+gradeConfig+"), #classTable td:nth-child("+gradeConfig+")").hide();
                </text>
            }

            if((string)ViewData[SMS_Web.Helpers.SysConfig.EC_POSITION_FLAG] == "No")
            {
                <text>
        $("#classTable th:nth-child("+posConfig+"), #classTable td:nth-child("+posConfig+")").hide();
                </text>
            }

            if((string)ViewData[SMS_Web.Helpers.SysConfig.EC_PERCENTAGE_FLAG] == "No")
            {
                <text>
        $("#classTable th:nth-child("+perConfig+"), #classTable td:nth-child("+perConfig+")").hide();
                </text>
            }
        }
    }

        function GetGradeList()
        {
            if(gradeList == null || gradeList.length == 0)
            {
                $.post("/GradesConfig/GetGradeList",
                               function (response) {
                                   if (response.length > 0) {
                                       gradeList = response;
                                   }
                               }
                    );
            }
        }

        function GetGrade(obtainedMarks, totalMarks)
        {
            var obtPercentage = Math.floor(((obtainedMarks * 100) / totalMarks));
            var grade = '';
            if(gradeList != null && gradeList.length > 0)
            {
                for(var i = 0; i < gradeList.length; i++)
                {
                    var minRange = Number(gradeList[i][1]);
                    var maxRange = Number(gradeList[i][2]);

                    if(Number(obtPercentage) >= minRange && Number(obtPercentage) <= maxRange)
                    {
                        grade = gradeList[i][0];
                    }
                }
            }
            return grade;
        }

        function setClassResultAll()
        {
            $("#isPrintAll").val("0");

            return true;
        }

        function setPrintAll()
        {
            $("#isPrintAll").val("1");

            return true;
        }

        function setSendSmsAll()
        {
            $("#isPrintAll").val("2");

            return true;
        }

</script>

<div class="row" id="searchPanelData" style="display:none;">
    <div class="col-md-12 col-sm-12 col-xs-12">
        @using (Html.BeginForm("CreateClassResultPdf", "ExamResult", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <fieldset>
                <div class="x_panel">
                    <div class="x_title sc_panel_header">
                        <label class="nav navbar-left control-label sc_panel_label" align="left">Class Sheet </label>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                            </li>

                            <li>
                                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                            </li>
                        </ul>

                        <div class="nav navbar-right" style="margin-top:2px;">
                            <div>
                                <input type="date" name="IssuedDate" class="form-control input-sm" id="issuedDate" />
                            </div>
                        </div>

                        <div class="nav navbar-right" style="margin-top:5px;margin-right:10px;">
                            <label class="control-label" style="font-size: 11px;" align="right" for="first-name">
                                Issued Date
                            </label>
                        </div>

                        <div class="clearfix"></div>
                    </div>

                    <div class="x_content">

                        <div class="form-group">
                            <div class="table-responsive">
                                <input type="hidden" class="custom-control-input" name="IsAllStudent" value="0" style="width:20px;height:20px;" id="isPrintAll">
                                <table class="table table-striped table-bordered" id="classTable">
                                    <thead>
                                        <tr class="headings" id="tableHead">
                                            <th>
                                                <p style="font-size:11px;">Roll No</p>
                                            </th>
                                            <th>
                                                <p style="font-size:11px;">Admission No</p>
                                            </th>
                                            <th>
                                                <p style="font-size:11px;">Name</p>
                                            </th>
                                            <th>
                                                <p style="font-size:11px;">Father Name</p>
                                            </th>
                                        </tr>

                                    </thead>
                                    <tbody style="background-color:white;color:#2A3F54" id="tableData">
                                        @*@if (ViewData["examSheet"] != null)
                                            {
                                                int i = 0;
                                                foreach (var item in (IEnumerable<SMS_DAL.ViewModel.ExamResultViewModel>)ViewData["examSheet"])
                                                {
                                                    <tr>
                                                        <td></td>
                                                        <td>
                                                            <input type="text" name="examResultIds" value="@(item.Id)" hidden="hidden" />
                                                            <input type="text" name="CourseIds" value="@(item.CourseId)" hidden="hidden" />
                                                            <input type="text" name="ExamTypeIds" value="@(item.ExamTypeId)" hidden="hidden" />
                                                            <input type="text" name="studentIds" value="@(item.StudentId)" hidden="hidden" />
                                                            @Html.TextBoxFor(modelItem => item.RollNumber, new { Name = "RollNumber", @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(modelItem => item.Name, new { Name = "Name", @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(modelItem => item.ObtMarks, new { Name = "ObtMarks", @class = "form-control input-sm", @style = "background-color: transparent; width:100px", @type = "Number", @id = ("obtTb" + i) })
                                                        </td>


                                                    </tr>
                                                    i++;
                                                }
                                            }*@
                                    </tbody>
                                </table>


                            </div>
                            <div class="form-group row">

                                <div class="nav navbar-right">
                                    <input type="submit" value="Send Reult to All Students" onclick="return setSendSmsAll()" class="btn btn-squar" />
                                    <input type="submit" value="Create Pdf Of All Students" onclick="return setPrintAll()" class="btn btn-squar" />
                                    <input type="submit" value="Create Class Pdf" onclick="return setClassResultAll()" class="btn btn-squar" />
                                </div>


                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>

        }
    </div>
</div>
