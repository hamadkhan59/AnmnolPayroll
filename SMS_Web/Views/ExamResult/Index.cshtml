@model SMS_DAL.ViewModel.ExamResultViewModel

@{
    ViewBag.Title = "Index";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Exam Result</label>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                    </li>
                    <li>
                        @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm("SearchMarksSheet", "ExamResult", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @*@Html.ValidationSummary(true)*@
                    @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
                    <fieldset>


                        <div class="form-group row">
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Class
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    @Html.DropDownList("ClassId", (IEnumerable<SelectListItem>)ViewBag.ClassId, new { @class = "form-control input-sm", onchange = "getChangeSectionList()", id = "classId" })
                                </div>
                            </div>
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Section
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <select class="form-control input-sm" name="SectionId" id="sectionId"></select>
                                </div>
                            </div>
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                                Subject
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <select class="form-control input-sm" name="SubjectId" id="subjectId"></select>
                                </div>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Year <span class="required">*</span>
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    @Html.DropDownList("Year", (IEnumerable<SelectListItem>)ViewBag.YearId, new { @class = "form-control input-sm", @onchange = "GetTermByYear(1)", id = "yearId" })
                                </div>
                            </div>
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Term <span class="required">*</span>
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <select class="form-control input-sm" name="TermId" onchange="GetExamByTerm(1)" id="termId"></select>
                                    <input type="hidden" id="branchId" value="@ViewData["branchId"]" />
                                </div>
                            </div>
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Exams <span class="required">*</span>
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <select class="form-control input-sm" name="ExamTypeId" id="examId"></select>
                                </div>
                            </div>
                        </div>

                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="nav navbar-right">
                                <input type="submit" value="Create Sheet" name="Create" class="btn btn-squar" />
                            </div>
                        </div>
                    </fieldset>
                    @*</form>*@
                }
            </div>
        </div>
    </div>
</div>

<script>

    function populateErrors()
    {
   @if(ViewData["Error"] != null)
   {
       if ((int)@ViewData["Error"] == 2)
       {
           <text> showNotification('Marks Sheet is saved succesfully.', 'Success', 'Success') </text>
       }
       else if ((int)@ViewData["Error"] == 200)
       {
           <text> showNotification('Exam Result is deleted succesfully.', 'Success', 'Success') </text>
       }
   else if ((int)@ViewData["Error"] == 11)
       {
           <text> showNotification('Fee Head is already added to Chalaln.', 'Error', 'Error') </text>
       }
   else if ((int)@ViewData["Error"] == 1420)
       {
           <text> showNotification('Unable to Search Any Exam Result, Please check your search criteria.', 'Error', 'Error') </text>
       }
       else if ((int)@ViewData["Error"] == 2420)
       {
           <text> showNotification('Unable to Create Pdf.', 'Error', 'Error') </text>
       }
       else if ((int)@ViewData["Error"] == 420)
       {
           <text> showNotification('Unable to Save Marks Sheet.', 'Error', 'Error') </text>
       }
       else if ((int)@ViewData["Error"] == 520)
       {
           <text> showNotification('Unable to Delete Exam Result.', 'Error', 'Error') </text>
       }
   else if ((int)@ViewData["Error"] == 100)
       {
           <text> showNotification('Total Exams perecentage is exceding from 100.', 'Error', 'Error') </text>
       }
   else if ((int)@ViewData["Error"] == 3)
       {
           <text> showNotification('Unable to delete Exam.', 'Error', 'Error') </text>
       }
   else if ((int)@ViewData["Error"] == 4)
       {
           <text> showNotification('Exam is deleted succesfully.', 'Success', 'Success') </text>
       }
   }
    }



    window.onload = function (e) {
        ShowSearchPanel(@((ViewData["examSheet"] == null) ? 0 : 1));

        $('#classTable').DataTable( {
            paging: false, searching : false
        } );

        populateErrors();
        var d = new Date();
        var month = d.getMonth();
        var year = d.getFullYear();

        var classId = '@(ViewData["GlobalClassId"] == null ? 0 : (int)ViewData["GlobalClassId"])';
        var yearId = '@(ViewData["GlobalYearId"] == null ? 0 : (int)ViewData["GlobalYearId"])';
        if(classId != 0)
        {
            $("#classId").val(classId);
        }
        if(yearId != 0)
        {
            $("#yearId").val(yearId);
        }
        getSectionList();
        GetTermByYear(1);

        $('#issuedDate').val('@DateTime.Now.ToString("yyyy-MM-dd")');
    }

    function getSectionList() {
        var classId = $("#classId").val();
        if(classId.length == 0)
        {
            classId = 0;
        }
        GetClassSection(classId, 0, 'sectionId', 3, 0);
        //first : classId, seccond : load all option or not, third : section dd html id
        //fourth : any call function to call, fifth : sectionId to set in DD
    }

    function getChangeSectionList() {
        var classId = $("#classId").val();
        if (classId.length == 0) {
            classId = 0;
        }
        GetClassSection(classId, 0, 'sectionId', 3, 0);
        //first : classId, seccond : load all option or not, third : section dd html id
        //fourth : any call function to call, fifth : sectionId to set in DD
    }

    function setPrevSearchVals()
    {
        var sectionId = '@(ViewData["GlobalSectionId"] == null ? 0 : (int)ViewData["GlobalSectionId"])';
        var classId = '@(ViewData["GlobalClassId"] == null ? 0 : (int)ViewData["GlobalClassId"])';
        var tempClass = $("#classId").val();
        if(classId == tempClass)
        {
            if(sectionId != 0)
            {
                $("#sectionId").val(sectionId);
            }
        }
    }

    function GetTermByYear(payload) {
        var yearId = $('#yearId').val();
        var branchId = $('#branchId').val();
        var termId = '@(ViewData["GlobalTermId"] == null ? 0 : (int)ViewData["GlobalTermId"])';
        var tempYearId = '@(ViewData["GlobalYearId"] == null ? 0 : (int)ViewData["GlobalYearId"])';
        if(yearId == tempYearId)
        {
            if(termId != 0)
            {
                $("#termId").val(termId);
            }
        }
        else
        {
            termId = 0;
        }

        GetTermsByYear(yearId, 0, 'termId', branchId, payload, termId);
    }


    function getSubjectList()
    {
        var classId = $("#classId").val();
        var sectionId = $("#sectionId").val();
        var tempSection = '@(ViewData["GlobalSectionId"] == null ? 0 : (int)ViewData["GlobalSectionId"])';
        var subjectId = '@(ViewData["GlobalSujectId"] == null ? 0 : (int)ViewData["GlobalSujectId"])';

        $.ajax({
            type: "GET",
            url: AppDetail() + '/api/Common/getClassSubject?classId=' + classId + '&&sectionId=' + sectionId + '&&isLoadAll=0',
            contentType: 'application/json',
            success: function (result) {
                $("#subjectId").html(result);
                if(sectionId == tempSection){
                    $("#subjectId").val(subjectId);
                }
            },
            error: function (res) {
                showNotification('Unable to load subjects', 'Error', 'Error')
            }
        });
    }

    function ValidatePdfInput()
    {
        var totalMarks = $("#totalMarks").val();
        $("#isDelete").val(0);

        if(totalMarks <= 0)
        {
            showNotification('Total marks must be greater than 0.', 'Error', 'Error')
            return false;
        }

        var table = document.getElementById("classTable");
        for (var i = 0, row; row = table.rows[i]; i++) {
            var obtMarks = $("#obtTb"+i).val();
            if(obtMarks < 0)
            {
                showNotification('Obt marks must be greater than zero.', 'Error', 'Error')
                //$("#inputLabel").text("Obt marks must be greater than zero");
                return false;
            }
            if(Number(obtMarks) > Number(totalMarks))
            {
                showNotification('Obt marks must be less than or equal to Exam Total Marks.', 'Error', 'Error')
                //$("#inputLabel").text("Obt marks must be less than Exam Total Marks");
                return false;
            }
        }

        return true;
    }

    function ValidatePdfInput()
    {
        var totalMarks = $("#totalMarks").val();
        $("#isDelete").val(0);

        if(totalMarks <= 0)
        {
            showNotification('Total marks must be greater than 0.', 'Error', 'Error')
            return false;
        }

        var table = document.getElementById("classTable");
        for (var i = 0, row; row = table.rows[i]; i++) {
            var obtMarks = $("#obtTb"+i).val();
            if(obtMarks < 0)
            {
                showNotification('Obt marks must be greater than zero.', 'Error', 'Error')
                //$("#inputLabel").text("Obt marks must be greater than zero");
                return false;
            }
            if(Number(obtMarks) > Number(totalMarks))
            {
                showNotification('Obt marks must be less than or equal to Exam Total Marks.', 'Error', 'Error')
                //$("#inputLabel").text("Obt marks must be less than Exam Total Marks");
                return false;
            }
        }

        return true;
    }

    function ValidateInput()
    {
        //var passPercetnage = $("#passPerecentage").val();
        var totalMarks = $("#totalMarks").val();
        $("#isDelete").val(0);

        if(totalMarks <= 0)
        {
            showNotification('Total marks must be greater than 0.', 'Error', 'Error')
            //$("#inputLabel").text("Total marks must be greater than zero");
            return false;
        }
        //if(passPercetnage <= 0)
        //{
        //    //$("#inputLabel").text("Pass percentage must be greater than zero");
        //    showNotification('Pass percentage must be greater than 0.', 'Error', 'Error')
        //    return false;
        //}

        var table = document.getElementById("classTable");
        for (var i = 0, row; row = table.rows[i]; i++) {
            var obtMarks = $("#obtTb"+i).val();
            if(obtMarks < 0)
            {
                showNotification('Obt marks must be greater than zero.', 'Error', 'Error')
                //$("#inputLabel").text("Obt marks must be greater than zero");
                return false;
            }
            if(parseFloat(obtMarks) > parseFloat(totalMarks+".00"))
            {
                showNotification('Obt marks must be less than or equal to Exam Total Marks.', 'Error', 'Error')
                //$("#inputLabel").text("Obt marks must be less than Exam Total Marks");
                return false;
            }
        }



        ConfirmAction('Are you sure, you want to save the marks sheet?', 'saveMarksSheet');
        return false;
    }


    function setDelete()
    {
        $("#isDelete").val(1);
        ConfirmAction('Are you sure, you want to delete the marks sheet?', 'deleteMarksSheet');
        return false;
    }

    function setPrint()
    {

        $("#isPrint").val(1);

        return ValidatePdfInput();
    }


    function GetExamByTerm(payload) {
        var termId = $('#termId').val();
        var branchId = $('#branchId').val();
        var examTypeId = '@(ViewData["GLobalExamId"] == null ? 0 : (int)ViewData["GLobalExamId"])';
        var tempTermId = '@(ViewData["GlobalTermId"] == null ? 0 : (int)ViewData["GlobalTermId"])';
        if(termId == tempTermId)
        {
            if(examTypeId != 0)
            {
                $("#examId").val(examTypeId);
            }
        }
        else
        {
            examTypeId = 0;
        }

        GetExamsByTerm(termId, 0, 'examId', branchId, payload, examTypeId);
    }

</script>

<div class="row" id="searchPanelData" style="display:none;">
    <div class="col-md-12 col-sm-12 col-xs-12">
        @using (Html.BeginForm("SaveMarksSheet", "ExamResult", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <fieldset>
                <div class="x_panel">
                    <div class="x_title sc_panel_header">
                        <label class="nav navbar-left control-label sc_panel_label" align="left">Marks Sheet </label>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                            </li>

                            <li>
                                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                            </li>
                        </ul>

                        <input type="hidden" class="custom-control-input" name="IsPrint" value="0" style="width:20px;height:20px;" id="isPrint">
                        <input type="hidden" class="custom-control-input" name="IsDelete" value="0" style="width:20px;height:20px;" id="isDelete">

                        <div align="right" style="margin-right:60px">
                            @*<div class="nav navbar-right col-md-1 col-sm-1 col-xs-1" align="right">
                                    <input type="number" name="passPercentage" style="width:100px" class="form-control input-sm" tabindex="4" id="passPerecentage" value="@ViewData["passPerecentage"]" />
                                </div>
                                <label class="nav navbar-right control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                                    Pass %
                                </label>*@
                            <div class="nav navbar-right col-md-2 col-sm-2 col-xs-2" align="right" style="margin-top:2px;">
                                <input type="number" name="totalMarks" style="width:100px" class="form-control input-sm" tabindex="3" id="totalMarks" value="@ViewData["totalMarks"]" />
                            </div>
                            <label class="nav navbar-right control-label col-md-2 col-sm-2 col-xs-12" style="margin-top:5px;font-size: 11px;" align="right" for="last-name">
                                Total Marks
                            </label>
                        </div>
                        <div class="clearfix"></div>
                    </div>

                    <div class="x_content">

                        <div class="form-group">
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered" id="classTable">
                                    <thead>
                                        <tr class="headings">
                                            <th>
                                                <label>Roll No</label>
                                            </th>
                                            <th>
                                                <label>Admission No</label>
                                            </th>
                                            <th>
                                                <label>Name</label>
                                            </th>
                                            <th>
                                                <label>Obt Marks</label>
                                            </th>

                                        </tr>

                                    </thead>
                                    <tbody style="background-color:white;color:#2A3F54" id="classBody">
                                        @if (ViewData["examSheet"] != null)
                                        {
                                            int i = 0;
                                            foreach (var item in (IEnumerable<SMS_DAL.ViewModel.ExamResultViewModel>)ViewData["examSheet"])
                                            {
                                                <tr>
                                                    <td>
                                                        <input type="text" name="examResultIds" value="@(item.Id)" hidden="hidden" />
                                                        <input type="text" name="CourseIds" value="@(item.CourseId)" hidden="hidden" />
                                                        <input type="text" name="ExamTypeIds" value="@(item.ExamTypeId)" hidden="hidden" />
                                                        <input type="text" name="studentIds" value="@(item.StudentId)" hidden="hidden" />
                                                        @item.RollNumber
                                                    </td>
                                                    <td>
                                                        @item.AdmissionNo
                                                    </td>
                                                    <td>
                                                        @item.Name
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(modelItem => item.ObtMarks, new { Name = "ObtMarks", @class = "form-control input-sm", @style = "background-color: transparent; width:100px", @type = "Number", @step = "any", @min = "0", @id = ("obtTb" + i), tabindex = 5 })
                                                        @*@Html.TextBoxFor(modelItem => item.ObtMarks, new { Name = "ObtMarks", @class = "form-control input-sm", @style = "background-color: transparent; width:100px", @type = "Number", @id = ("obtTb" + i), tabindex = 5 })*@
                                                    </td>


                                                </tr>
                                                i++;
                                            }
                                        }
                                    </tbody>
                                </table>


                            </div>
                            <div class="form-group row">
                                <div class="nav navbar-right">
                                    <input type="submit" value="Delete Result" onclick="return setDelete()" id="deleteMarksSheet" class="btn btn-squar" tabindex="6" style=" margin-left:20px;" />
                                    <input type="submit" value="Create Pdf" onclick="return setPrint()" class="btn btn-squar" tabindex="6" />
                                    <input type="submit" value="Save Result" class="btn btn-squar" tabindex="7" onclick="return ValidateInput()" id="saveMarksSheet" />
                                </div>

                                <div class="nav navbar-right">
                                    <div>
                                        <input type="date" name="IssuedDate" class="form-control input-sm" id="issuedDate" />
                                    </div>
                                </div>

                                <div class="nav navbar-right" style="margin-right:10px;">
                                    <label class="control-label" style="font-size: 11px;" align="right" for="first-name">
                                        Issued Date
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>

        }
    </div>
</div>
