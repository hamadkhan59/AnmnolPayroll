@model List<SMS_DAL.ViewModel.ExamResultViewModel>

@{
    ViewBag.Title = "Index";
    //Layout = "Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm("CreateStudentResultPdf", "ExamResult", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @*@Html.ValidationSummary(true)*@
    @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
    <fieldset>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_title sc_panel_header">
                        <label class="nav navbar-left control-label sc_panel_label" align="left">Student Detail</label>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                            </li>
                            <li>
                                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
        


                        <div class="form-group row">
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Roll No <span class="required">*</span>
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <input type="text" name="Remarks" class="form-control input-sm" readonly="readonly" value="@(((SMS_DAL.Student)ViewData["student"]).RollNumber)" />
                                </div>
                            </div>
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Name <span class="required">*</span>
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <input type="text" name="Remarks" class="form-control input-sm" readonly="readonly" value="@(((SMS_DAL.Student)ViewData["student"]).Name)" />
                                </div>
                            </div>
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Father Name <span class="required">*</span>
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <input type="text" name="Remarks" class="form-control input-sm" readonly="readonly" value="@(((SMS_DAL.Student)ViewData["student"]).FatherName)" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Class
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <input type="text" name="Remarks" class="form-control input-sm" readonly="readonly" value="@(((SMS_DAL.ViewModel.ClassSectionModel)ViewData["classModel"]).ClassName)" />
                                </div>
                            </div>
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Section
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <input type="text" name="Remarks" class="form-control input-sm" readonly="readonly" value="@(((SMS_DAL.ViewModel.ClassSectionModel)ViewData["classModel"]).SectionName)" />
                                </div>
                            </div>
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Exam
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <input type="text" name="Remarks" class="form-control input-sm" readonly="readonly" value="@(((SMS_DAL.ExamType)ViewData["examType"]).Name)" />
                                    <input type="hidden" name="StudentPositon" value="@ViewData["position"]" />
                                </div>
                            </div>
                        </div>
                        @*<div class="form-group row">
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Remarks
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <input type="text" name="teacherRemarks" class="form-control input-sm" id="teacherRemarks" />
                                </div>
                            </div>

                        </div>*@

                        @*</fieldset>*@
                        @*</form>*@
                        @*}*@
                    </div>
                </div>
            </div>
        </div>

        <script>
            function populateErrors()
            {
       @if(ViewData["Error"] != null)
       {
           if ((int)@ViewData["Error"] == 2)
           { 
               <text> showNotification('Marks Sheet is saved succesfully.', 'Success', 'Success') </text>
           }
       else if ((int)@ViewData["Error"] == 11)
           { 
               <text> showNotification('Fee Head is already added to Chalaln.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 420)
           { 
               <text> showNotification('Unable to Create Class Sheet.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 100)
           { 
               <text> showNotification('Total Exams perecentage is exceding from 100.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 3)
           { 
               <text> showNotification('Unable to delete Exam.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 4)
           { 
               <text> showNotification('Exam is deleted succesfully.', 'Success', 'Success') </text>
           }
       }
            }

            var gradeList = [];

            window.onload = function (e) {
                populateErrors();

                var d = new Date();
                var month = d.getMonth();
                var year = d.getFullYear();

                //$("#yearIdSearch").get(0).selectedIndex = year - 2016;
                $('#issuedDate').val('@DateTime.Now.ToString("yyyy-MM-dd")');
                var total = @((Model == null || Model.Count == 0) ? 0 : Model.Sum(x => decimal.Parse(x.totalMarks)));
                var obtained = @((Model == null || Model.Count == 0) ? 1 : Model.Sum(x => decimal.Parse(x.ObtMarks)));
                var grade = GetGradeList(obtained, total);
                //var grade = GetGrade(obtained, total);
                
               
            }

            function GetGradeList(obtained, total)
            {
                if(gradeList == null || gradeList.length == 0)
                {
                    $.post(AppDetail() + "/GradesConfig/GetGradeList",
                                   function (response) {
                                       if (response.length > 0) {
                                           gradeList = response;
                                           var grade =  GetGrade(obtained, total);
                                           var totalGrade = document.getElementById("totalGrade");
                                           totalGrade.innerHTML = grade;
                                       }
                                   }
                        );
                }
            }

            function GetGrade(obtainedMarks, totalMarks)
            {
                var obtPercentage = Math.floor(((obtainedMarks * 100) / totalMarks));
                var percentage = document.getElementById("percentage");
                if(percentage != null)
                {
                    percentage.innerHTML = obtPercentage;
                }
                var grade = '';
                if(gradeList != null && gradeList.length > 0)
                {
                    for(var i = 0; i < gradeList.length; i++)
                    {
                        var minRange = Number(gradeList[i][1]);
                        var maxRange = Number(gradeList[i][2]);

                        if(Number(obtPercentage) >= minRange && Number(obtPercentage) <= maxRange)
                        {
                            grade = gradeList[i][0];
                        }
                    }
                }
                return grade;
            }


            function validateTeacherRemarks()
            {
                var teacherRemarks = $("#teacherRemarks").val();
                if (teacherRemarks.length > 0)
                    return true;
                else
                {
                    //$("#inputLabel").text("Please enter teacher remarks");
                    showNotification('Please enter teacher remarks.', 'Error', 'Error');
                    return false;
                }
            }



            @*function getSubjectList() {
        var classId = $("#classId").val();
        var sectionId = $("#sectionId").val();
        $("#subjectId").html("");
        if(classId != '' && classId != '0' && sectionId == '' && sectionId == '0')
        {
            //getDetailSectionList();
        }
        @foreach (var item in (IEnumerable<SMS_DAL.ViewModel.RegisterCourseModel>)ViewData["classSubject"])
        {

            <text>
        if(classId == '' || classId == '0' || classId == @(item.ClassId))
        {
            if(sectionId == '' || sectionId == '0' || sectionId == @(item.SectionId))
        {
            var id = @(item.SubjectId);
            var name = '@(item.SubjectName)';
            $("#subjectId").append('<option value='+id+'>'+name+'</option>');
        }
    }
    </text>
        }
    }*@



        </script>

        @*<div class="row">*@
        @*<div class="col-md-12 col-sm-12 col-xs-12">*@
        @*@using (Html.BeginForm("SaveMarksSheet", "ExamResult", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <fieldset>*@
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Result Detail </label>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                    </li>

                    <li>
                        @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                    </li>
                </ul>

                <div class="nav navbar-right" style="margin-top:2px;">
                    <div>
                        <input type="date" name="IssuedDate" class="form-control input-sm" id="issuedDate" />
                    </div>
                </div>

                <div class="nav navbar-right" style="margin-right:10px;margin-top:5px;">
                    <label class="control-label" style="font-size: 11px;" align="right" for="first-name">
                        Issued Date
                    </label>
                </div>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                <div class="form-group">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered" id="classTable">
                            <thead>
                                <tr class="headings" id="tableHead">

                                    <th>
                                        Subject Name
                                    </th>
                                    <th>
                                        Total
                                    </th>
                                    <th>
                                        Obtained
                                    </th>
                                    <th>
                                        Grade
                                    </th>
                                </tr>

                            </thead>
                            <tbody style="background-color:white;color:#2A3F54" id="tableData">
                                @if (Model != null)
                                {
                                    decimal total = 0;
                                    decimal obtained = 0;
                                    foreach (var item in (IEnumerable<SMS_DAL.ViewModel.ExamResultViewModel>)Model)
                                    {
                                        total += decimal.Parse(item.totalMarks);
                                        obtained += decimal.Parse(item.ObtMarks);
                                        <tr>
                                            <td>
                                                @Html.TextBoxFor(modelItem => item.CourseName, new { Name = "CourseName", @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(modelItem => item.totalMarks, new { Name = "TotalMarks", @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(modelItem => item.ObtMarks, new { Name = "ObtMarks", @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(modelItem => item.Grade, new { Name = "Grade", @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                            </td>

                                        </tr>
                                    }
                                    
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>

                                    </tr>

                                    <tr>
                                        <td style = "font-weight:bold">Total</td>
                                        <td style = "font-weight:bold">@total</td>
                                        <td style = "font-weight:bold">@obtained</td>
                                        @if ((string)ViewData[SMS_Web.Helpers.SysConfig.EC_GRADE_FLAG] == "Yes")
                                        {
                                            <td style = "font-weight:bold" id="totalGrade"></td>
                                        }
                                    </tr>

                                    <tr>
                                        @if((string)ViewData[SMS_Web.Helpers.SysConfig.EC_PERCENTAGE_FLAG] == "Yes")
                                        {
                                            <td style="font-weight:bold">Percentage</td>
                                            <td style="font-weight:bold" id="percentage">@total</td>
                                        }
                                        @if((string)ViewData[SMS_Web.Helpers.SysConfig.EC_POSITION_FLAG] == "Yes")
                                        {
                                            <td style="font-weight:bold">Position</td>
                                            <td style="font-weight:bold">@ViewData["position"]</td>
                                        }

                                    </tr>

                                }
                            </tbody>
                        </table>


                    </div>
                    <div class="form-group row">
                        <div class="nav navbar-right">
                            @*<input type="submit" value="Create Pdf" onclick="return validateTeacherRemarks()" class="btn btn-sm btn-info btn-squar" style=" margin-left:20px;" />*@
                            <input type="submit" value="Create Pdf" class="btn btn-squar" style="margin-left:20px;" />
                        </div>
                        <div class="nav navbar-right">
                            @*<input type="submit" value="Create Pdf" onclick="return validateTeacherRemarks()" class="btn btn-sm btn-info btn-squar" style=" margin-left:20px;" />*@
                            <input type="button" value="Send Sms" class="btn btn-squar" style="margin-left:20px;"
                                   onclick="location.href=AppDetail() + '/ExamResult/SendStudentSmsExamResult?teacherRemarks='+$('#teacherRemarks').val() +'&IssuedDate=' + $('#issuedDate').val()" />
                        </div>
                        @*<div class="nav navbar-right">
                            <input type="button" value="Send Exam Sms" name="Send Exam Sms" class="btn btn-squar"
                                   onclick="location.href=AppDetail() + '/ExamResult/SendSmsExamResult'" />
                        </div>*@
                    </div>
                </div>
            </div>
        </div>
    </fieldset>

}
    </div>
</div>
