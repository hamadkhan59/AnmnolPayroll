@model SMS_DAL.Session

@{
    ViewBag.Title = "Index";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Session @((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "Edit" : "Create")</label>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                    </li>
                    <li>
                        @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
                    <fieldset>

                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Name <span class="required annotation">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "annotation" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                                From Date
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.From_Date, new { @type = "date", @class = "form-control input-sm", id = "fromDate" })
                                    @*@Html.ValidationMessageFor(model => model.Description)*@
                                </div>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                                To Date
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.To_Date, new { @type = "date", @class = "form-control input-sm", id = "toDate" })
                                    @*@Html.ValidationMessageFor(model => model.Description)*@
                                </div>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" align="right" for="last-name">
                            </label>
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" align="right" for="last-name" id="lblError" style="color:red">
                            </label>
                        </div>

                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="col-md-9 col-sm-9 col-xs-12">
                                <div class="nav navbar-right">
                                    <input type="submit" value="Save" name="Create" class="btn btn-squar" onclick="return CompareDates()"
                                           style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:none" : "display:block") />
                                    <input type="submit" value="Save" name="Update" class="btn btn-squar" onclick="return CompareDates()"
                                           style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:block" : "display:none") />
                                </div>
                            </div>

                        </div>
                    </fieldset>
                    @*</form>*@
                }
            </div>
        </div>
    </div>
</div>
 

<div class="x_panel">
    <div class="x_title sc_panel_header">
        <label class="nav navbar-left control-label sc_panel_label" align="left">Session List </label>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
            </li>

            <li>
                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
            </li>
        </ul>
        <div class="clearfix"></div>
    </div>

    <div class="x_content">

        <div class="form-group">
            <div class="table-responsive">
                <table class="table table-striped table-bordered" id="classTable">
                    <thead>
                        <tr class="headings">
                            <th class="column-title">
                                Name
                            </th>
                            <th class="column-title">
                                From Date
                            </th>
                            <th class="column-title">
                                To Date
                            </th>
                            <th>
                                Actions
                            </th>

                        </tr>

                    </thead>
                    <tbody style="background-color:white;color:#2A3F54" id="classBody">
                        @if (ViewData["sessions"] != null)
                        {
                            foreach (var item in (IEnumerable<SMS_DAL.Session>)ViewData["sessions"])
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.From_Date)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.To_Date)
                                    </td>
                                    <td>
                                        @Html.ActionLink("  ", "Index", new { id = item.Id }, new { style = "color: green;font-size: 15px;", title = "Edit", @class = "glyphicon glyphicon-edit" }) 
                                        @*@Html.ActionLink("Details", "Details", new { id=item.Id }) |*@
                                        @Html.ActionLink("  ", "Delete", new { id = item.Id }, new { onclick = "return ConfirmDelete('Are you sure you wish to delete this Session?', " + item.Id + ", 'Session');", style = "color: darkred;font-size: 15px;", title = "Delete", @class = "glyphicon glyphicon-trash" })
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>

    function populateErrors()
    {
        @if(ViewData["Error"] != null)
           {
               if ((int)@ViewData["Error"] == 2)
               {
                   <text> showNotification('Session is saved succesfully.', 'Success', 'Success') </text>
               }
               else if ((int)@ViewData["Error"] == 11)
               {
                   <text> showNotification('Session is already added.', 'Error', 'Error') </text>
               }
               else if ((int)@ViewData["Error"] == 1)
               {
                   <text> showNotification('The Name Field is Required.', 'Error', 'Error') </text>
               }
               else if ((int)@ViewData["Error"] == 420)
               {
                   <text> showNotification(' Unable to Save Session.', 'Error', 'Error') </text>
               }
               else if ((int)@ViewData["Error"] == 59)
               {
                   <text> showNotification('A session is already exist for the dates.', 'Error', 'Error') </text>
               }
               else if ((int)@ViewData["Error"] == 3)
               {
                   <text> showNotification('Unable to delete Session.', 'Error', 'Error') </text>
               }
            else if ((int)@ViewData["Error"] == 40)
               {
                   <text> showNotification('Unable to delete Session, As Students(s) are saved for this Session', 'Error', 'Error') </text>
               }
               else if ((int)@ViewData["Error"] == 4)
               {
                   <text> showNotification(' Session is deleted succesfully.', 'Success', 'Success') </text>
               }
           }

    }


    window.onload = function (e) {
        populateErrors();
        @if(Model != null )
        {
            <text>
        $('#fromDate').val('@(Model.From_Date.Value.ToString("yyyy-MM-dd"))');//.ToString(), "yyyy-MM-dd")Model.DateOfBirth.Value.ToString("yyyy-MM-dd")));
        $('#toDate').val('@(Model.To_Date.Value.ToString("yyyy-MM-dd"))');
        </text>
        }
        else
        {
            <text>
        $('#fromDate').val('@(DateTime.Now.ToString("yyyy-MM-dd"))');//.ToString(), "yyyy-MM-dd")Model.DateOfBirth.Value.ToString("yyyy-MM-dd")));
        $('#toDate').val('@(DateTime.Now.ToString("yyyy-MM-dd"))');
        </text>
        }
        $('#classTable').DataTable({ paging : false, searching : false});
    }

    function CompareDates()
    {
        var fromDate = $('#fromDate').val();
        var toDate = $('#toDate').val();
        if (fromDate < toDate) {
            $("#lblError").text("");
            return true;
        }
        else {
            $("#lblError").text("From date must be less than to date");
            return false;
        }

    }
</script>