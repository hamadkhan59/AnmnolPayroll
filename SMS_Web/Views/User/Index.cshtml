@model SMS_DAL.User

@{
    ViewBag.Title = "Index";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">User @((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "Edit" : "Create")</label>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                    </li>
                    <li>
                        @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
                    <fieldset>
                     
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Group <span class="required">*</span>
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    @Html.DropDownList("UserGroup.Id", (IEnumerable<SelectListItem>)ViewBag.GroupId, new { @class = "form-control", @style = "height:30px;", id = "groupId" })
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Staff <span class="required">*</span>
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    @Html.DropDownList("StaffId", (IEnumerable<SelectListItem>)ViewBag.StaffId, new { @class = "form-control", @style = "height:30px;", id = "staffId" })
                                </div>
                            </div>

                        </div>
                        
                        
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Branch <span class="required">*</span>
                            </label>
                            <div class="col-md-7 col-sm-7 col-xs-12">
                                <div>
                                    @Html.DropDownList("Branch.ID", (IEnumerable<SelectListItem>)ViewBag.BranchId, new { @class = "form-control", @style = "height:30px;", onchange = "setLoginId()", id = "branchId" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                User Name <span class="required">*</span>
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", onchange = "setLoginId()", id = "txtUserName" })
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Login Id <span class="required">*</span>
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.LoginId, new { @class = "form-control", id = "txtLoginId", @style = "box-shadow: none; background-color: transparent;", @readonly = "readonly" })
                                </div>
                            </div>

                        </div>

                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Password <span class="required">*</span>
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", id = "txtPassword" })
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Confirm Password <span class="required">*</span>
                            </label>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                <div>
                                    <input type="password" class="form-control" id="txtConfirmPassword" value="@(Model ==  null || Model.Password == null ? "" : Model.Password)" />
                                    @*@Html.TextBoxFor(model => model.Password, new { @class = "form-control", id = "txtConfirmPassword" })>*@
                                </div>
                            </div>

                        </div>

                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="col-md-10 col-sm-10 col-xs-12">
                                <div class="nav navbar-right">
                                    <input type="submit" value="Save" name="Create" class="btn btn-squar" onclick="return VerifyPassword();"
                                           style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:none;" : "display:block;") />
                                    <input type="submit" value="Save" name="Update" class="btn btn-squar" onclick="return VerifyPassword();"
                                           style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:block;" : "display:none;") />
                                </div>
                            </div>
                        </div>
                    </fieldset>
                    @*</form>*@
                }
            </div>
        </div>
    </div>
</div>
 

<div class="x_panel">
    <div class="x_title sc_panel_header">
        <label class="nav navbar-left control-label sc_panel_label" align="left">User List </label>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
            </li>

            <li>
                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
            </li>
        </ul>

        <div class="nav navbar-right col-md-4 col-sm-4 col-xs-4" align="right" style="margin-top:2px;">
            <div>
                @Html.DropDownList("UserGroupId", (IEnumerable<SelectListItem>)ViewBag.UserGroupId, "All", new { @class = "form-control", @style = "height:30px;", onchange = "getUsersByGroup()", id = "cbGroupId" })
            </div>
        </div>
        <label class="nav navbar-right control-label col-md-2 col-sm-2 col-xs-12" style="margin-top:5px;font-size: 11px;" align="right" for="last-name">
            User Group
        </label>

        <div class="clearfix"></div>
    </div>

    <div class="x_content">

        <div class="form-group">
            <div class="table-responsive">
                <table class="table table-striped table-bordered" id="classTable">
                    <thead>
                        <tr class="headings">
                            @*<th>
                                Branch Name
                            </th>*@
                            <th>
                                User Name
                            </th>
                            <th>
                                Login Id
                            </th>
                            <th>
                                Actions
                            </th>

                        </tr>

                    </thead>
                    <tbody style="background-color:white;color:#2A3F54" id="classBody">
                        @foreach (var item in (IEnumerable<SMS_DAL.User>)ViewData["users"])
                        {
                            <tr class="@item.UserGroupId">
                                <td>
                                    @Html.DisplayFor(modelItem => item.UserName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LoginId)
                                </td>
                                
                                @if (item.LoginId != "admin" && item.LoginId != "superadmin")
                                {
                                    <td>
                                        @Html.ActionLink("  ", "Index", new { id = item.Id }, new { style = "color: green;font-size: 15px;", title = "Edit", @class = "glyphicon glyphicon-edit" }) 
                                        @Html.ActionLink("  ", "Delete", new { id = item.Id }, new { onclick = "return ConfirmDelete('Are you sure you wish to delete this User?', " + item.Id + ", 'User');", style = "color: darkred;font-size: 15px;", title = "Delete", @class = "glyphicon glyphicon-trash" })
                                    </td>
                                }
                                else
                                {
                                    <td>  </td>
                                }


</tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<script>

    function populateErrors()
    {
        @if(ViewData["Error"] != null)
      {
          if ((int)@ViewData["Error"] == 2)
          {
              <text> showNotification('User is saved succesfully.', 'Success', 'Success') </text>
          }
      else if ((int)@ViewData["Error"] == 11)
          {
              <text> showNotification('User is already added.', 'Error', 'Error') </text>
          }
      else if ((int)@ViewData["Error"] == 1)
          {
              <text> showNotification('The Name Field is Required.', 'Error', 'Error') </text>
          }
      else if ((int)@ViewData["Error"] == 420)
          {
              <text> showNotification(' Unable to Save User.', 'Error', 'Error') </text>
          }
      else if ((int)@ViewData["Error"] == 3)
          {
              <text> showNotification('Unable to delete User.', 'Error', 'Error') </text>
          }
    else if ((int)@ViewData["Error"] == 40)
          {
              <text> showNotification('Unable to delete User, As some data is saved for this User', 'Error', 'Error') </text>
          }
      else if ((int)@ViewData["Error"] == 4)
          {
              <text> showNotification(' User is deleted succesfully.', 'Success', 'Success') </text>
          }
      }
    }

    window.onload = function (e) {
        populateErrors();
        $('#classTable').DataTable({ paging : false, searching : false});
    }

    function setLoginId()
    {
        var userId = $("#txtUserName").val();
        var branchId = $("#branchId").val();
        var branchCode = '';
        @foreach (var item in (IEnumerable<SMS_DAL.Branch>)ViewData["branch"])
        {
            <text>
        if (branchId == '@Html.Raw(item.ID)')
        {
            branchCode = '@(item.BRANCH_CODE)';
        }
        </text>
        }
        userId = userId.trim();
        $("#txtLoginId").val(userId.concat("@@", branchCode));
    }

    function VerifyPassword()
    {
        var password = $("#txtPassword").val();
        var confirmPassword = $("#txtConfirmPassword").val();

        if (password == '' && confirmPassword == '')
        {
            //document.getElementById('lblError').innerHTML = 'Please enter password';
            showNotification('Please enter password.', 'Error', 'Error')
            return false;
        }

        if (password == confirmPassword) {
            document.getElementById('lblError').innerHTML = '';
            return true;
        }
        else {
            //document.getElementById('lblError').innerHTML = 'Password is not matched';
            showNotification('Password is not matched.', 'Error', 'Error')
            return false;
        }
    }

    function getUsersByGroup()
    {
        var rows = $('table > tbody tr');
        var groupId = $("#cbGroupId").val();
        if (groupId == null || groupId == '')
        {
            rows.show();
        }
        else
        {
            var showRows = rows.filter('.' + groupId).show();
            rows.not(showRows).hide();
        }
    }

</script>