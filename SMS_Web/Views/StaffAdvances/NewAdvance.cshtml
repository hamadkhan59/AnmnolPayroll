@model SMS_DAL.StaffAdvance

@{
    ViewBag.Title = "Index";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Advance @((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "Edit" : "Create")</label>
                <div class="nav navbar-right">
                    <input type="button" value="Help" name="Help" onclick="@("window.location.href='" + @Url.Action("Index", "Video", new { id = 10}) + "'");"
                           class="btn sc_help_btn btn-xs" />
                </div>
<div class="clearfix"></div>
</div>

<div class="x_content">

    @using (Html.BeginForm())
               {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
    <fieldset>
        <div class="form-group row">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" align="right" for="first-name">
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div >
                    
</div>
            </div>
        </div>


        <div class="form-group row">
            <label class="control-label col-md-2 col-sm-2 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                Staff Id <span class="required annotation">*</span>
            </label>
            <div class="col-md-4 col-sm-4 col-xs-12">
                <div>
                    @Html.TextBoxFor(model => model.Staff.StaffId, new { Name = "StaffId", @class = "form-control input-sm", @readonly = "readonly" })
                    @Html.HiddenFor(model => model.Id, new { Name = "Id", @class = "form-control input-sm", @readonly = "readonly" })
                </div>
            </div>

            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                Pay From <span class="required annotation">*</span>
            </label>

            <div class="col-md-3 col-sm-3 col-xs-12">
                <div>
                    @Html.DropDownList("AccountTypeId", (IEnumerable<SelectListItem>)ViewBag.AccountTypeId, new { @class = "form-control input-sm", @onchange = "ChangeAccountType()", id = "accountTypeId" })
                </div>
            </div>

        </div>

        <div class="form-group row">
            <label class="control-label col-md-2 col-sm-2 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                Staff Name <span class="required annotation">*</span>
            </label>
            <div class="col-md-4 col-sm-4 col-xs-12">
                <div>
                    @Html.TextBoxFor(model => model.Staff.Name, new { @class = "form-control input-sm", @readonly = "readonly" })
                </div>
            </div>
            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">

            </label>

            <div class="col-md-3 col-sm-3 col-xs-12">
                <div>
                    <select class="form-control input-sm" name="FinanceAccountId" id="financeAccountId"></select>
                    <input type="hidden" name="BranchId" class="form-control input-sm" id="BranchId" value="@ViewData["branchId"]">
                </div>
            </div>
        </div>

        <div class="form-group row">
            <label class="control-label col-md-2 col-sm-2 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                Advance Amount <span class="required annotation">*</span>
            </label>
            <div class="col-md-4 col-sm-4 col-xs-12">
                <div>
                    @Html.TextBoxFor(model => model.AdvanceAmount, new { Name = "AdvanceAmount", type = "number", @class = "form-control input-sm", id = "advance" })
                </div>
            </div>

            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                Cheque No
            </label>

            <div class="col-md-3 col-sm-3 col-xs-12">
                <div>
                    <input type="number" name="ChequeNO" class="form-control input-sm" id="ChequeNO" style="height:30px;" />
                </div>
            </div>

        </div>

        <div class="form-group row">
            <label class="control-label col-md-2 col-sm-2 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                Description
            </label>
            <div class="col-md-4 col-sm-4 col-xs-12">
                <div>
                    @Html.TextAreaFor(model => model.Remarks, 3, 25, new { Name = "Remarks", @class = "form-control input-sm" })
                </div>
            </div>

            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                Advance Instalment
            </label>

            <div class="col-md-1 col-sm-1 col-xs-12">
                <div>
                    @Html.TextBoxFor(model => model.Staff.AdvanceInstallment, new { Name = "InstallmentAmount", type = "number", @class = "form-control input-sm" })
                </div>
            </div>

            <label class="control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                Advance
            </label>

            <div class="col-md-1 col-sm-1 col-xs-12">
                <div>
                    @Html.TextBoxFor(model => model.Staff.Advance, new { @class = "form-control input-sm", @readonly = "readonly" })
                </div>
            </div>

        </div>

        <div class="ln_solid"></div>
        <div class="form-group">
            <div class="col-md-10 col-sm-10 col-xs-12">
            </div>
            <div class="col-md-2 col-sm-2 col-xs-12">
                <input type="submit" value="Save" name="Create" class="btn btn-squar"
                       onclick="return VerifyInputs('SaveAdvance');" id="SaveAdvance"
                       style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:none;" : "display:block;") />
                <input type="submit" value="Save" name="Update" class="btn btn-squar"
                       onclick="return VerifyInputs('EditAdvance');" id="EditAdvance"
                       style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:block;" : "display:none;") />
            </div>
        </div>
    </fieldset>
                 @*</form>*@
               }
</div>
</div>
</div>
</div>


<div class="x_panel">
    <div class="x_title sc_panel_header">
        <label class="nav navbar-left control-label sc_panel_label" align="left">Advance History </label>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
            </li>

            <li>
                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
            </li>
        </ul>

        <div class="clearfix"></div>
    </div>

    <div class="x_content">

        <div class="form-group">
            <div class="table-responsive">
                <table class="table table-striped table-bordered" id="classTable">
                    <thead>
                        <tr class="headings">
                            <th>
                                <label>Date</label>
                            </th>
                            <th>
                                <label>Amount</label>
                            </th>
                            <th>
                                <label> Remarks</label>
                            </th>
                            <th>
                                <label> Actions</label>
                            </th>
                        </tr>

                    </thead>
                    <tbody style="background-color:white;color:#2A3F54" id="classBody">
                        @if (ViewData["staffAdvances"] != null)
                        {
                            int i = 0;
                            int total = 0;
                            foreach (var item in (IEnumerable<SMS_DAL.StaffAdvance>)ViewData["staffAdvances"])
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CreatedOn)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.AdvanceAmount)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Remarks)
                                    </td>
                                    <td>
                                        @if (i == 0)
                                        {
                                            @Html.ActionLink(" ", "EditAdvance", "StaffAdvances", new { id = item.Id }, new { style = "color: #31B0D5;font-size: 20px; margin-left: 10px", title = "Edit Advance", @class = "glyphicon glyphicon-edit" })
                                        }
                                    </td>
                                </tr>
                                total += (int)item.AdvanceAmount;
                                i++;
                            }

                            if (i > 0)
                            {
                                <tr>
                                    <td>Total</td>
                                    <td>@total</td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>

    function populateErrors()
    {
        @if(ViewData["Error"] != null)
       {
           if ((int)@ViewData["Error"] == 2)
           {
               <text> showNotification(' Advance is saved succesfully.', 'Success', 'Success') </text>
           }
           else if ((int)@ViewData["Error"] == 1)
           {
               <text> showNotification('The Name Field is Required.', 'Error', 'Error') </text>
           }
           else if ((int)@ViewData["Error"] == 11)
           {
               <text> showNotification('Class is already added..', 'Error', 'Error') </text>
           }
           else if ((int)@ViewData["Error"] == 420)
           {
               <text> showNotification('Unable to save Advance.', 'Error', 'Error') </text>
           }
           else if ((int)@ViewData["Error"] == 3)
           {
               <text> showNotification('Unable to delete Class.', 'Error', 'Error') </text>
           }
           else if ((int)@ViewData["Error"] == 4)
           {
               <text> showNotification('Class is deleted succesfully.', 'Success', 'Success') </text>
           }
       }
    }

    $(document).ready(function () {
        populateErrors();
        ChangeAccountType();
        //$('#classTable').DataTable({ paging : false, info : false, searching : false});
    });

    function VerifyInputs(buttonId)
    {
        var accountTypeId = $("#accountTypeId").val();
        var amount = $("#advance").val();

        if(amount == null || amount.length == 0)
        {
            showNotification('Please add advance amount to continue.', 'Error', 'Error');
            return false;
        }
        else
        {
            if(Number(amount) <= 0)
            {
                showNotification('Please adavnce amount must be greater than zero.', 'Error', 'Error')
                return false;
            }
        }

        if(accountTypeId == 1)
        {
            var chequeNo =  $("#ChequeNO").val();
            if(chequeNo == null || chequeNo.length == 0)
            {
                showNotification('Please add cheque no to continue.', 'Error', 'Error')
                return false;
            }
        }

        //ConfirmAction('Are you sure, you want to save the Advance?', buttonId);
        getStaffPaymentApproval('@Model.Staff.StaffId', 'Are you sure, you want to save the Advance?', buttonId);
        return false;
    }


    function ChangeAccountType()
    {
        var accountTypeId = $("#accountTypeId").val();
        var branchId = $("#BranchId").val();
        if(accountTypeId == 1)
        {
            accountTypeId = 13;
        }
        else
        {
            accountTypeId = 14;
        }
        $.ajax({
            type: "GET",
            url: AppDetail() + '/api/Common/getFinanceAccount?typeId=' + accountTypeId + '&&branchId=' + branchId + '&&isLoadAll=0',
            contentType: 'application/json',
            success: function (result) {
                $("#financeAccountId").html(result);
            },
            error: function (res) {
                showNotification('Unable to load account', 'Error', 'Error')
            }
        });
    }

</script>