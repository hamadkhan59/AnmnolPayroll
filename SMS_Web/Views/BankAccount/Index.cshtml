@model SMS_DAL.BankAccount

@{
    ViewBag.Title = "Index";
    //Layout = "Views/Shared/_Layout.cshtml";
}



<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Bank Account @((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "Edit" : "Create")</label>
                <div class="nav navbar-right">
                    <input type="button" value="Help" name="Help" onclick="@("window.location.href='" + @Url.Action("Index", "Video", new { id = 29}) + "'");"
                             class="btn sc_help_btn btn-xs" />
                </div>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div hidden="hidden">@Html.ValidationSummary(false)</div>
                    @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
                    <fieldset>


                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Tag Account 
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.DropDownList("FinanceAccountId", (IEnumerable<SelectListItem>)ViewBag.BankFourthLvlAccountId, new { @class = "form-control  input-sm" })
                                </div>
                            </div>

                            <div class="col-md-3 col-sm-3 col-xs-12">
                                @Html.ActionLink("  ", "CreateBankAccount", "FinanceFourthLvl", new { id = 0 }, new { style = "color: green;font-size: 20px;", title = "Create New Tag Account", @class = "glyphicon glyphicon-plus" })
                            </div>

                        </div>

                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Bank Name <span class="required" style="color: red">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.BankName, new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Account Title <span class="required" style="color: red">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.AccountTitle, new { @class = "form-control input-sm", @type = "text" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Account No <span class="required" style="color: red">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.AccountNo, new { @class = "form-control input-sm", @type = "Number" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Branch Code
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.BranchCode, new { @class = "form-control input-sm", @type = "Number" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Branch Name 
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.BranchName, new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                                Branch Address
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextAreaFor(model => model.Address, 3, 25, new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>

                        <div class="ln_solid"></div>
                        <div class="form-group">

                            <div class="col-md-9 col-sm-9 col-xs-12">
                                <div class="nav navbar-right">
                                    <input type="submit" value="Save" name="Create" class="btn btn-squar"
                                           style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:none" : "display:block") />
                                    <input type="submit" value="Save" name="Update" class="btn btn-squar"
                                           style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:block" : "display:none") />

                                </div>

                            </div>
                          
                        </div>
                    </fieldset>
                    @*</form>*@
                }
            </div>
        </div>
    </div>
</div>


<script>


    function populateErrors()
    {

        @if (!Html.ViewData.ModelState.IsValid)
        {
            <text> populateValidationErrors()  </text>
        }

        @if(ViewData["Error"] != null)
   {
       if ((int)@ViewData["Error"] == 1)
       {
           <text> showNotification(' The Name Field is Required.', 'Error', 'Error') </text>
       }
   else if ((int)@ViewData["Error"] == 11)
       {
           <text> showNotification(' Bank Account is already added.', 'Error', 'Error') </text>
       }
   else if ((int)@ViewData["Error"] == 2)
       {
           <text> showNotification('Bank Account is saved succesfully.', 'Success', 'Success') </text>
       }
   else if ((int)@ViewData["Error"] == 3)
       {
           <text> showNotification('Unable to delete Bank Account.', 'Error', 'Error') </text>
       }
       else if ((int)@ViewData["Error"] == 40)
       {
           <text> showNotification('Unable to delete Bank Account, as Financial data is saved againt this account', 'Error', 'Error') </text>
       }
   else if ((int)@ViewData["Error"] == 420)
       {
           <text> showNotification(' Unable to Save Bank Account.', 'Error', 'Error') </text>
       }
   else if ((int)@ViewData["Error"] == 4)
       {
           <text> showNotification('Bank Account is deleted succesfully.', 'Success', 'Success') </text>
       }
   }
    }

    window.onload = function (e) {
        $("#classTable").DataTable({ paging: false });
        GetBankAccounts();
        populateErrors();
    }

    function GetBankAccounts() {
        var accountId = $('#financeAccount').val();

        $('#classTable > tbody').html("");
        var total = 0;
        @foreach (var item in (IEnumerable<SMS_DAL.BankAccount>)ViewData["BankAccounts"])
        {
            <text>
        if(accountId == '')
        {
            var tableRow = '<tr>' +
                '<td>' +
                    '@(item.BankName)' +
                '</td>' +
                '<td>' +
                    '@(item.BranchName)' +
                        '</td>' +
                        '<td>' +
                    '@(item.AccountTitle)' +
                        '</td>' +
                        '<td>' +
                    '@(item.AccountNo)' +
                        '</td>' +

                            '<td style="color:blue;">' +
                           ' @Html.ActionLink("  ", "Index", new { id = item.Id }, new { style = "color: green;font-size: 15px;", title = "Edit", @class = "glyphicon glyphicon-edit" }) '+
                                '@Html.ActionLink("  ", "Delete", new { id = item.Id }, new { onclick = "return ConfirmDelete('Are you sure you wish to delete this Bank Account?', " + item.Id + ", 'BankAccount');", style = "color: darkred;font-size: 15px;", title = "Delete", @class = "glyphicon glyphicon-trash" })' +
                            '</td>' +
                        '</tr>';
            $("#classTable").find('tbody').append(tableRow);
        }
        else if(accountId == '@(item.FinanceAccountId)')
        {
            var tableRow = '<tr>' +
               '<td></td><td>' +
                   '@(item.BankName)' +
               '</td>' +
               '<td>' +
                   '@(item.BranchName)' +
                       '</td>' +
                       '<td>' +
                   '@(item.AccountTitle)' +
                       '</td>' +
                       '<td>' +
                   '@(item.AccountNo)' +
                       '</td>' +

                           '<td style="color:blue;">' +
                          ' @Html.ActionLink("  ", "Index", new { id = item.Id }, new { style = "color: green;font-size: 15px;", title = "Edit", @class = "glyphicon glyphicon-edit" }) |'+
                               '@Html.ActionLink("  ", "Delete", new { id = item.Id }, new { onclick = "return ConfirmDelete('Are you sure you wish to delete this Bank Account?', " + item.Id + ", 'BankAccount');", style = "color: darkred;font-size: 15px;", title = "Delete", @class = "glyphicon glyphicon-trash" })' +
                           '</td>' +
                       '</tr>';
            $("#classTable").find('tbody').append(tableRow);
        }
        </text>
        }
    }
</script>


<div class="x_panel">
    <div class="x_title sc_panel_header">
        <label class="nav navbar-left control-label sc_panel_label" align="left">Bank Accounts List </label>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
            </li>

            <li>
                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
            </li>
        </ul>
        <div class="nav navbar-right col-md-4 col-sm-4 col-xs-4" align="right" style="margin-top:2px;">
            <div>
                @Html.DropDownList("FinanceAccountId", (IEnumerable<SelectListItem>)ViewBag.BankFourthLvlAccountId1, "All", new { @class = "form-control  input-sm", @onchange = "GetBankAccounts()", id = "financeAccount" })
                @*@Html.DropDownList("ClassId", (IEnumerable<SelectListItem>)ViewBag.Classes, new { @class = "form-control input-sm", @onchange = "GetClassChallan()", id = "classIdSearch" })*@
            </div>
        </div>
        <label class="nav navbar-right control-label col-md-1 col-sm-1 col-xs-12" align="right" for="first-name" style="margin-top:5px;font-size: 12px;">
            Account
        </label>
        <div class="clearfix"></div>
    </div>

    <div class="x_content">

        <div class="form-group">
            <div class="table-responsive">
                <table class="table table-striped table-bordered" id="classTable">
                    <thead>
                        <tr class="headings">
                            <th>
                                Name
                            </th>
                            <th>
                                Branch
                            </th>
                            <th>
                                Account Title
                            </th>
                            <th>
                                Account No
                            </th>
                            <th>
                                Actions
                            </th>

                        </tr>

                    </thead>
                    <tbody style="background-color:white;color:#2A3F54" id="classBody">
                        @foreach (var item in (IEnumerable<SMS_DAL.BankAccount>)ViewData["BankAccounts"])
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BankName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BranchName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AccountTitle)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AccountNo)
                                </td>
                                <td>
                                    @Html.ActionLink("  ", "Index", new { id = item.Id }, new { style = "color: green;font-size: 15px;", title = "Edit", @class = "glyphicon glyphicon-edit" }) 
                                    @*@Html.ActionLink("Details", "Details", new { id=item.Id }) |*@
                                    @Html.ActionLink("  ", "Delete", new { id = item.Id }, new { onclick = "return ConfirmDelete('Are you sure you wish to delete this Bank Account?', " + item.Id + ", 'BankAccount');", style = "color: darkred;font-size: 15px;", title = "Delete", @class = "glyphicon glyphicon-trash" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
