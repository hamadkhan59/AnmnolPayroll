@model List<SMS_DAL.ViewModel.StaffAttendanceRequestModel>

@{
    ViewBag.Title = "Index";
}


<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Staff Detail</label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    <div>
                        @Html.ValidationSummary()
                    </div>
                </div>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                    </li>
                    <li>
                    </li>
                </ul>
                <div class="clearfix"></div>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
                    <fieldset>
                        
                        <div class="form-group row">
                            <label class="control-label col-md-2 col-sm-2 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Designation
                            </label>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                <div>
                                    <input type="text" class="form-control" value="@(Model == null ? "" : Model[0].Designation)" readonly="readonly" />
                                </div>
                            </div>

                            <label class="control-label col-md-2 col-sm-2 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Staff Id
                            </label>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                <div>
                                    <input type="text" class="form-control" value="@(Model == null ? "" : Model[0].StaffId.ToString())" readonly="readonly" />
                                </div>
                            </div>

                        </div>
                       
                        <div class="form-group row">
                            <label class="control-label col-md-2 col-sm-2 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Name
                            </label>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                <div>
                                    <input type="text" class="form-control" value="@(Model == null ? "" : Model[0].Name)" readonly="readonly" />
                                </div>
                            </div>

                            <label class="control-label col-md-2 col-sm-2 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Father Name
                            </label>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                <div>
                                    <input type="text" class="form-control" value="@(Model == null ? "" : Model[0].FatherName)" readonly="readonly" />
                                </div>
                            </div>

                        </div>

                    </fieldset>
                    @*</form>*@
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        @using (Html.BeginForm("ApproveStaffAttendanceRequest", "Approval", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
    <fieldset>

        <div class="row" id="searchPanelData" style="display:none;">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_title sc_panel_header">
                        <label class="nav navbar-left control-label sc_panel_label" align="left">Requests Detail</label>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                            </li>
                            <li>
                                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <input type="hidden" id="btnAction" name="Action" />
                        <input type="hidden" id="btnRequestId" name="RequestId" value="@(Model == null || Model.Count == 0 ? 0 : Model[0].Id)" />
                        <div class="table-responsive">

                            <div class="form-group">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered" id="classTable">
                                        <thead>
                                            <tr class="headings">
                                                <th class="column-title">
                                                   Attendance Date
                                                </th>
                                                <th class="column-title">
                                                    Attendance Status
                                                </th>
                                                <th class="column-title">
                                                    Status Requested
                                                </th>
                                                <th class="column-title">
                                                    Time In
                                                </th>
                                                <th class="column-title">
                                                    Time Out
                                                </th>
                                                
                                                <th class="column-title">
                                                    Comments
                                                </th>

                                            </tr>

                                        </thead>
                                        <tbody style="background-color:white;color:#2A3F54" id="classBody">
                                            @if (Model != null)
                                            {
                                                for (int i = 0; i < Model.Count; i++)
                                                {
                                                    <tr class="even pointer">
                                                        <td>@Model[i].AttendanceDate.ToString().Split(' ')[0]</td>
                                                        <td>@Model[i].Status</td>
                                                        <td>@Model[i].StatusRequested</td>
                                                        <td>@Model[i].TimeIn</td>
                                                        <td>@Model[i].TimeOut</td>
                                                        <td>
                                                            <text type="text" style="width:200px;" class="form-control" value="@Model[i].Comments" name="Comments" id="@("Comments" + i)" readonly="readonly" />
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>

                                    </table>
                                </div>

                                <input type="text" class="form-control" name="Remarks" value="@(Model == null ? "" : Model[0].Remarks)"  style="margin-top:10px;" />

                            </div>
                        </div>

                        <div class="form-group" style="margin-top:10px;">
                            <div class="nav navbar-right">
                                <input type="submit" value="Rejected" name="ApproveRequestList" id="btnReqReject" onclick="return VerifyInputs('btnReqReject');" class="btn btn-squar btn-dark" />
                                <input type="submit" value="Approved" name="ApproveRequestList" id="btnReqApprove" onclick="return VerifyInputs('btnReqApprove');" class="btn btn-squar" />
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>

    </fieldset>

            @*</form>*@
        }
    </div>
</div>

<script>
    function populateErrors()
    {
       @if(ViewData["Error"] != null)
       {
           if ((int)@ViewData["Error"] == 2)
           { 
               <text> showNotification('Attendance Request is submitted succesfully.', 'Success', 'Success') </text>
           }
       else if ((int)@ViewData["Error"] == 420)
           { 
               <text> showNotification('Unable to submit Attendance Request, Please try again later.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 300)
           { 
               <text> showNotification('Unable to mark Attendance as selected day is Sunday.', 'Error', 'Error') </text>
           }
       
       }
    }

    var checkCount = 0;
    window.onload = function (e) {
        ShowSearchPanel(@((Model == null || Model.Count == 0) ? 0 : Model.Count));
        populateErrors();
        $('#fromDate').val('@(DateTime.Now.ToString("yyyy-MM-dd"))');
        $('#toDate').val('@(DateTime.Now.ToString("yyyy-MM-dd"))');
        checkCount = 0;
        $('#classTable').DataTable({searching : false, paging : false});
    }

    function SetTime(index)
    {
        @{
            <text>
                var time = '@(DateTime.Now.TimeOfDay.ToString())';
                //alert(time.substring(0, 5));
                $("#startTime" + index).val(time.substring(0, 5));
            </text>
        }
    }

    
    function CheckAllCheckBoxes()
    {
        var rowCount = $('#statusIdAll').val();
        if($("#cbAttendanceAll").is(':checked') == true)
        {
            for( var i = 0 ; i < rowCount; i++)
            {
                SetTime(i);
                SelectElement("cbAttendance"+i, true);
                var StatusValue = $('#statusDropDownId'+i).children('option').filter(':selected').val();
                if(StatusValue == 1 || StatusValue == 2)
                {
                    var element = document.getElementById('statusDropDownId'+i);
                    element.value = 1;
                    $('#statusId'+i).val(1);
                }
            }
            checkCount = rowCount;
        }
        else
        {
            for( var i = 0 ; i < rowCount; i++)
            {
                SelectElement("cbAttendance"+i, false);
                var StatusValue = $('#statusDropDownId'+i).children('option').filter(':selected').val();
                if(StatusValue == 1 || StatusValue == 2)
                {
                    var element = document.getElementById('statusDropDownId'+i);
                    element.value = 2;
                    $('#statusId'+i).val(2);
                }
            }
            checkCount = 0;
        }
    }

    function SelectElement(id, valueToSelect)
    {    
        var element = document.getElementById(id);
        element.checked  = valueToSelect;
    }
    function changeStatusValue(index)
    {
        if($("#cbAttendance"+index).is(':checked') == true)
        {
            var StatusValue = $('#statusDropDownId'+index).children('option').filter(':selected').val();
            $('#statusId'+index).val(StatusValue);
        }
    }

    function setStatusValue(index)
    {
        SetTime(index);
        ChangeCheckCkount(index);
        var StatusValue = $('#statusDropDownId'+index).children('option').filter(':selected').val();
        if(StatusValue == 1 || StatusValue == 2)
        {
            if($("#cbAttendance"+index).is(':checked') == true)
            {
                var element = document.getElementById('statusDropDownId'+index);
                element.value = 1;
                $('#statusId'+index).val(1);
            }
            else
            {
                var element = document.getElementById('statusDropDownId'+index);
                element.value = 2;
                $('#statusId'+index).val(2);
            }
        }
    }

    function ChangeCheckCkount(index)
    {
        if($("#cbAttendance"+index).is(':checked') == true)
        {
            checkCount++;
        }
        else
        {
            checkCount--;
        }
    }

    function VerifyInputs(btnId)
    {
        var message = 'Are you sure, you want to approve the attendance request?';
        var action = 1;
        
        if(btnId == 'btnReqReject')
        {
            message = 'Are you sure, you want to reject the attendance request?';
            action = 2;
        }
        
        $('#btnAction').val(action);
        ConfirmAction(message, btnId);
        return false;
    }
</script>

@*<table>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.AttandanceDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Student.RollNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AttandanceDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Student.RollNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.id })
                </td>
            </tr>
        }

    </table>*@
