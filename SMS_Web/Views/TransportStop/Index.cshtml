@model SMS_DAL.TransportStop

@{
    ViewBag.Title = "Index";
    //Layout = "Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">TransportStop @((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "Edit" : "Create")</label>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                    </li>
                    <li>
                        @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
                    <fieldset>
                        
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                TransportStop Name <span class="required">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                                Rent
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.Rent, new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                                Description
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.Description, new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>

                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="col-md-9 col-sm-9 col-xs-12">
                                <div class="nav navbar-right">
                                    <input type="submit" value="Save" name="Create" class="btn btn-squar"
                                           style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:none;" : "display:block;") />
                                    <input type="submit" value="Save" name="Update" class="btn btn-squar"
                                           style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:block;" : "display:none;") />
                                </div>
                            </div>

                        </div>
                    </fieldset>
                    @*</form>*@
                }
            </div>
        </div>
    </div>
</div>

<div class="x_panel">
    <div class="x_title sc_panel_header">
        <label class="nav navbar-left control-label sc_panel_label" align="left">TransportStop List </label>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
            </li>

            <li>
                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
            </li>
        </ul>
        <div class="clearfix"></div>
    </div>

    <div class="x_content">

        <div class="form-group">
            <div class="table-responsive">
                <table class="table table-striped table-bordered" id="classTable">
                    <thead>
                        <tr class="headings">
                            <th>
                                TransportStop Name
                            </th>
                            <th>
                                TransportStop Rent
                            </th>
                            <th>
                                TransportStop Description
                            </th>
                            <th>
                                Actions
                            </th>
                        </tr>

                    </thead>
                    <tbody style="background-color:white;color:#2A3F54" id="classBody">
                    @foreach (var item in (IEnumerable<SMS_DAL.TransportStop>)ViewData["TransportStops"])
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Rent)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.ActionLink("  ", "Index", new { id = item.Id }, new { style = "color: green;font-size: 15px;", title = "Edit", @class = "glyphicon glyphicon-edit" }) 
                            @*@Html.ActionLink("Details", "Details", new { id=item.Id }) |*@
                            @Html.ActionLink("  ", "Delete", new { id = item.Id }, new { onclick = "return ConfirmDelete('Are you sure you wish to delete this Transport Stop?', " + item.Id + ", 'TransportStop');", style = "color: darkred;font-size: 15px;", title = "Delete", @class = "glyphicon glyphicon-trash" })
                        </td>
                    </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>

    function populateErrors()
    {
        @if(ViewData["Error"] != null)
        {
            if ((int)@ViewData["Error"] == 1)
            {
                <text> showNotification(' The Name Field is Required.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 1)
            {
                <text> showNotification('The Name Field is Required.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 421)
            {
                <text> showNotification('TransportStop Name is already Exist.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 422)
            {
                <text> showNotification('TransportStop Code is already Exist.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 11)
            {
                <text> showNotification(' TransportStop Login Id is already Exist.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 1421)
            {
                <text> showNotification('TransportStop Name is already Exist.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 1422)
            {
                <text> showNotification('TransportStop Code is already Exist.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 111)
            {
                <text> showNotification('TransportStop Login Id is already Exist.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 3)
            {
                <text> showNotification('TransportStop to delete TransportStop.', 'Error', 'Error') </text>
            }
             else if ((int)@ViewData["Error"] == 420)
            {
                <text> showNotification('TransportStop to Save TransportStop.', 'Error', 'Error') </text>
            }
            else if ((int)@ViewData["Error"] == 2)
            {
                <text> showNotification('TransportStop is saved succesfully.', 'Success', 'Success') </text>
            }
            else if ((int)@ViewData["Error"] == 4)
            {
                <text> showNotification('TransportStop is deleted succesfully.', 'Success', 'Success') </text>
            }
        }
    }


    window.onload = function (e) {
        populateErrors();
        $('#classTable').DataTable( {
            paging: false, searching : false
        } );
    }

    function VerifyPassword() {
        var password = $("#txtPassword").val();
        var confirmPassword = $("#txtConfirmPassword").val();

        if (password == '' && confirmPassword == '') {
            showNotification('Please enter password.', 'Error', 'Error')
            //document.getElementById('lblError').innerHTML = 'Please enter password';
            return false;
        }

        if (password == confirmPassword) {
            document.getElementById('lblError').innerHTML = '';
            return true;
        }
        else {
            showNotification('Password is not matched.', 'Error', 'Error')
            //document.getElementById('lblError').innerHTML = 'Password is not matched';
            return false;
        }
    }

    function getUsersByGroup() {
        var rows = $('table > tbody tr');
        var groupId = $("#cbGroupId").val();
        if (groupId == null || groupId == '') {
            rows.show();
        }
        else {
            var showRows = rows.filter('.' + groupId).show();
            rows.not(showRows).hide();
        }
    }

</script>