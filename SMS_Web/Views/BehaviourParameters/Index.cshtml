@model SMS_DAL.BehaviourParameter

@{
    ViewBag.Title = "Behaviour Parameters";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Parameter @((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "Edit" : "Create")</label>
                <div class="nav navbar-right">
                    <input type="button" value="Help" name="Help" onclick="@("window.location.href='" + @Url.Action("Index", "Video", new { id = 10}) + "'");"
                            class="btn sc_help_btn btn-xs" />
                </div>
<div class="clearfix"></div>
</div>

<div class="x_content">

    @using (Html.BeginForm())
               {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
    <fieldset>
        
        <div class="form-group row">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                Name <span class="required annotation">*</span>
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div>
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control input-sm" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "annotation" })
                </div>
            </div>
        </div>
        <div class="form-group row">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                Rating <span class="required annotation">*</span>
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div>
                    @Html.TextBoxFor(model => model.Rating, new { @class = "form-control input-sm" })
                    @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "annotation" })
                </div>
            </div>
        </div>

        <div class="form-group row">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="CategoryId">
                Category
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div>
                    @Html.DropDownList("CategoryId", (IEnumerable<SelectListItem>)ViewBag.Categories, new { @class = "form-control input-sm" })
                    @Html.ValidationMessageFor(model => model.CategoryId)
                </div>
            </div>
        </div>

        <div class="form-group row">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                Description
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div>
                    @Html.TextAreaFor(model => model.Description, 3, 25, new { @class = "form-control input-sm" })
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>
        </div>

        

        <div class="ln_solid"></div>
        <div class="form-group">
           
            <div class="col-md-9 col-sm-9 col-xs-12">
                <div class="nav navbar-right">
                    <input type="submit" value="Save" name="CreateOrUpdate" class="btn btn-squar"
                           style="display:block;" />
                </div>
                
            </div>
        </div>
    </fieldset>
                 @*</form>*@
               }
</div>
</div>
</div>
</div>


<div class="x_panel">
    <div class="x_title sc_panel_header">
        <label class="nav navbar-left control-label sc_panel_label" align="left">Parameter List </label>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
            </li>

            <li>
                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
            </li>
        </ul>
        <div class="clearfix"></div>
    </div>

    <div class="x_content">

        <div class="form-group">
            <div class="table-responsive">
                <table class="table table-striped table-bordered" id="classTable">
                    <thead>
                        <tr class="headings">
                            <th>
                                <label>Category</label>
                            </th>
                            <th>
                                <label>Name</label>
                            </th>
                            <th>
                                <label>Rating</label>
                            </th>
                            <th>
                                <label>Description</label>
                            </th>
                            <th>
                                <label>Actions</label>
                            </th>

                        </tr>

                    </thead>
                    <tbody style="background-color:white;color:#2A3F54" id="classBody">
                        @foreach (var item in (IEnumerable<SMS_DAL.BehaviourParameter>)ViewData["parameters"])
                        {
                            <tr>

                                <td>
                                    @Html.DisplayFor(modelItem => item.BehaviourCategory.Name)
                                </td>
                                <td>
                                    @Html.ActionLink(item.Name, "Index", new { id = item.ID }, new {  }) 

                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Rating)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Description)
                                </td>                               
                                
                                <td>
                                    @Html.ActionLink("  ", "Index", new { id = item.ID }, new { style = "color: green;font-size: 15px;", title = "Edit", @class = "glyphicon glyphicon-edit" }) |
                                    @*@Html.ActionLink("Details", "Details", new { id=item.Id }) |*@
                                    @Html.ActionLink("  ", "Delete", new { id = item.ID }, new { onclick = "return ConfirmDelete('Are you sure you wish to delete this parameter?', " + item.ID + ", 'BehaviourParameters');", style = "color: darkred;font-size: 15px;", title = "Delete", @class = "glyphicon glyphicon-trash" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $("#classTable").DataTable();
        populateErrors();
    });

    function populateErrors()
    {
        @if(ViewData["Error"] != null)
       {
           if ((int)@ViewData["Error"] == 200)
           {
               <text> showNotification('Parameter is saved succesfully.', '', 'Success') </text>
           }
           else if ((int)@ViewData["Error"] == 201)
           {
               <text> showNotification('Parameter is deleted succesfully.', '', 'Success') </text>
           }
           else if ((int)@ViewData["Error"] == 1)
           {
               <text> showNotification('Please fill the required fields marked with *', '', 'Error') </text>
           }
           else if ((int)@ViewData["Error"] == 500)
           {
               <text> showNotification('Parameter is already added..', '', 'Error') </text>
           }
           else if ((int)@ViewData["Error"] == 420)
           {
               <text> showNotification('Unable to Save Parameter.', '', 'Error') </text>
           }
           else if ((int)@ViewData["Error"] == 421)
           {
               <text> showNotification('Unable to delete parameter as evaluations exist against it.', '', 'Error') </text>
           }
       }
    }

</script>