@model SMS_DAL.ViewModel.StaffModel

@{
    ViewBag.Title = "Create";
}


<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">

            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Staff Detail</label>
              
                <ul class="nav navbar-right panel_toolbox">

                    <li>
                        @*<a class="collapse-link"><i class="fa fa-chevron-up" id="clickUp"></i></a>*@
                    </li>
                    <li>
                        @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                    </li>

                </ul>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                        <div class="row">
                            <div class="control-label col-md-6 col-sm-6 col-xs-12">
                                <div class="form-group row">
                                    <label class="control-label col-md-3 col-sm-3 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                        Catagory
                                    </label>
                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                        <div style="color:black">
                                            : @Model.CategoryName
                                            @*@Html.TextBoxFor(model => model.Designation.DesignationCatagory.CatagoryName, new { @class = "form-control input-sm", @placeholder = "xxxxx-xxxxxxx-x" })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="control-label col-md-3 col-sm-3 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                        Designation
                                    </label>
                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                        <div style="color:black">
                                            : @Model.DesignationName
                                            @*@Html.TextBoxFor(model => model.Designation.Name, new { @class = "form-control input-sm", @placeholder = "xxxxx-xxxxxxx-x" })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="control-label col-md-3 col-sm-3 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                        CNIC
                                    </label>
                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                        <div style="color:black">
                                            : @Model.CNIC
                                            @*@Html.TextBoxFor(model => model.CNIC, new { @class = "form-control input-sm", @placeholder = "xxxxx-xxxxxxx-x" })*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="control-label col-md-6 col-sm-6 col-xs-12">
                                <div class="form-group row">


                                    <label class="control-label col-md-3 col-sm-3 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                        Name
                                    </label>
                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                        <div style="color:black">
                                            : @Model.Name
                                            @*@Html.TextBoxFor(model => model.CNIC, new { @class = "form-control input-sm", @placeholder = "xxxxx-xxxxxxx-x" })*@
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group row">

                                    <label class="control-label col-md-3 col-sm-3 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                        Father Name
                                    </label>
                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                        <div style="color:black">
                                            : @Model.FatherName
                                            @*@Html.TextBoxFor(model => model.CNIC, new { @class = "form-control input-sm", @placeholder = "xxxxx-xxxxxxx-x" })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group row">

                                    <label class="control-label col-md-3 col-sm-3 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                        Joining Date
                                    </label>
                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                        <div style="color:black">
                                            : @Model.JoinDate
                                            @*@Html.TextBoxFor(model => model.CNIC, new { @class = "form-control input-sm", @placeholder = "xxxxx-xxxxxxx-x" })*@
                                        </div>

                                    </div>
                                </div>
                            </div>

                        </div>

            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">

            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Salary Increment History</label>

                <ul class="nav navbar-right panel_toolbox">

                    <li>
                        @*<a class="collapse-link"><i class="fa fa-chevron-up" id="clickUp"></i></a>*@
                    </li>
                    <li>
                        @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                    </li>

                </ul>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm("DeleteSalaryIncrements", "StaffSalary", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    <fieldset>


                        <div class="col-md-3 col-sm-3 col-xs-12" hidden="hidden">
                            <div>
                                @Html.TextBoxFor(model => model.StaffId, new { @class = "form-control input-sm" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered" id="allownceTable">
                                    <thead>
                                        <tr class="headings">
                                          
                                            <th class="column-title">
                                                Increment Date
                                            </th>

                                            <th class="column-title">
                                                Basic Salary Increment
                                            </th>

                                            <th class="column-title">
                                                Allownce Increment
                                            </th>
                                            <th class="column-title">
                                                Actions
                                            </th>
                                         
                                        </tr>

                                    </thead>
                                    <tbody style="background-color:white;color:#2A3F54" id="allownceBody">
                                        @if (ViewData["IncrementHistory"] != null)
                                        {
                                            int i = 0;
                                            foreach (var item in (IEnumerable<SMS_DAL.ViewModel.StaffSalaryHistoryViewModel>)ViewData["IncrementHistory"])
                                            {
                                                <tr>
                                                   
                                                    <td>
                                                        @*@Html.DisplayFor(modelItem => item.IncrementDate)*@
                                                        @Html.TextBoxFor(modelItem => item.IncrementDate, new { Name = "IncrementDate", @style = "width:70px;height:20px;border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.BasicSalaryIncrement)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.AllownceIncrement)
                                                    </td>
                                                    <td>
                                                        @Html.ActionLink(" ", "getStaffSalaryIncrementDetail", new { StaffId = Model.StaffId, IncrementDate = item.IncrementDate }, new { style = "color: #31B0D5;font-size: 20px; margin-left: 10px", title = "View Increment Details", @class = "glyphicon glyphicon-th-list" })
                                                    </td>
                                                </tr>
                                                i++;
                                            }
                                        }
                                    </tbody>
                                </table>

                            </div>
                        </div>

                    </fieldset>
                }
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">

            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label" align="left">Salary Increment Detail</label>

                <ul class="nav navbar-right panel_toolbox">

                    <li>
                        @*<a class="collapse-link"><i class="fa fa-chevron-up" id="clickUp"></i></a>*@
                    </li>
                    <li>
                        @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                    </li>

                </ul>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm("DeleteSalaryIncrements", "StaffSalary", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    <fieldset>

                        <div class="row">
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered" id="allownceTable">
                                    <thead>
                                        <tr class="headings">

                                            <th class="column-title">

                                            </th>

                                            <th class="column-title">
                                                Increment Date
                                            </th>

                                            <th class="column-title">
                                                Increment Type
                                            </th>
                                            <th class="column-title">
                                                Increment
                                            </th>
                                            <th class="column-title">
                                                Allownce Name
                                            </th>

                                        </tr>

                                    </thead>
                                    <tbody style="background-color:white;color:#2A3F54" id="allownceBody">
                                        @if (ViewData["staffIncrementDetail"] != null)
                                        {
                                            int i = 0;
                                            foreach (var item in (IEnumerable<SMS_DAL.ViewModel.StaffSalaryHistoryViewModel>)ViewData["staffIncrementDetail"])
                                            {
                                                <tr>
                                                    <td>
                                                        <input type="checkbox" id="@("checkbox" + i)" name="IncrementIndexes" value="@i" onclick="ChangeCheckCkount(@i);" style="width:20px;height:20px;">
                                                        <input type="text" name="IncrementIds" value="@item.IncrementId" style="width:15px;height:15px;" hidden="hidden">
                                                        @*<input type="checkbox" id="@("checkbox" + i)" name="IncrementIndexes" value="@i" style="width:15px;height:15px;" @((item.IsApplied == true) ? "checked" : "")>*@
                                                        @*<input type="checkbox" name="Indexes" value="@i" id="@("cbSelect" + i)" style="width:15px;height:15px;" hidden="hidden" @((item.IsApplied == true) ? "checked" : "") >*@

                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(modelItem => item.IncrementDate, new { Name = "IncrementsDate", @style = "width:70px;height:20px;border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(modelItem => item.IncrementName, new { Name = "IncrementName", @style = "height:20px;border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(modelItem => item.Increment, new { Name = "Increment", @class = "form-control", @style = "height:23px;width:80px;-webkit-box-shadow: none; background-color: transparent;", @readonly = "readonly" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(modelItem => item.AllownceName, new { Name = "AllownceName", @style = "height:20px;border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                                    </td>

                                                </tr>
                                                i++;
                                            }
                                        }
                                    </tbody>
                                </table>

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="nav navbar-right">
                                <div class="nav navbar-right">
                                    <input type="submit" id="deleteIncrement" value="Delete" name="SaveSalaryIncrement" class="btn btn-squar navbar-right"
                                           onclick="return CheckCountValue();" />
                                </div>
                            </div>
                            </div>
                        </fieldset>
                }
            </div>
        </div>
    </div>
</div>

<script>

    function populateErrors()
    {
       @if(ViewData["Error"] != null)
       {
           if ((int)@ViewData["Error"] == 10)
           { 
               <text> showNotification('Salary Increment is deleted succesfully.', 'Success', 'Success') </text>
           }
       else if ((int)@ViewData["Error"] == 420)
           { 
               <text> showNotification(' Unable to delete Salary Increment .', 'Error', 'Error') </text>
           }
       }
    }

    var checkCount = 0;
    window.onload = function (e) {
        populateErrors();
        checkCount = 0;

        @if(Model != null )
        {
            <text>
        $('#dob').val('@(Model.DateOfBirth.Value.ToString("yyyy-MM-dd"))');//.ToString(), "yyyy-MM-dd")Model.DateOfBirth.Value.ToString("yyyy-MM-dd")));
        $('#joiningDate').val('@(Model.JoinDate.Value.ToString("yyyy-MM-dd"))');
        </text>
        }
        else
        {
            <text>
        $('#dob').val('@(DateTime.Now.ToString("yyyy-MM-dd"))');//.ToString(), "yyyy-MM-dd")Model.DateOfBirth.Value.ToString("yyyy-MM-dd")));
        $('#joiningDate').val('@(DateTime.Now.ToString("yyyy-MM-dd"))');
        gotoSearch();
        </text>
        }
    }
    var degreeCount = 0, allownceCount = 0;

    function ChangeCheckCkount(index)
    {
        if($("#checkbox"+index).is(':checked') == true)
        {
            checkCount++;
        }
        else
        {
            checkCount--;
        }
    }

    function CheckCountValue()
    {
        if(checkCount > 0)
        {
        }
        else
        {
            showNotification('Cant proceed, No record is selected', 'Error', 'Error')
            return false;
        }
        ConfirmAction('Are you sure, you want to delete this sepcific increment?', 'deleteIncrement');
        return false;
    }

    function EnableAmountTextBox(index)
    {
        if(document.getElementById("checkbox" + index).checked)
        {
            document.getElementById("cbSelect" + index).checked = true;
        }
        else
        {
            document.getElementById("cbSelect" + index).checked = false;
        }
    }

    function getStaffAllownces()
    {
        var staffId = 0;
        @if(Model != null )
        {
            <text>
        staffId = @Model.StaffId;
        </text>
        }
        allownceCount = 0;
        $.post( AppDetail() +"/StaffSalary/GetStaffSalaryIncrementHistory",
                    { staffId: staffId },
                    function (response) {
                        //alert(response[0][0]);
                        for (var i = 0; i < response.length; i++) {
                            var tableRow = '<tr class="even pointer" id="allRow' + allownceCount + '"><td></td>' +
                                '<td>' + response[i][0] + '</td>' +
                                '<td><input type="number" style="width:100px;" value="' + response[i][1] + '" id="valAllownce' + allownceCount + '" hidden="hidden"></td>' +
                                '<td><input type="number" style="width:100px;" value="' + response[i][2] + '" id="txtAllownce' + allownceCount + '"></td>' +
                                '<td></td>' +
                                '<td><input type="number" style="width:100px;" id="incAllownce' + allownceCount + '" ></td>' +
                                //'<td><input type="button" onclick=" onclick=RemoveItemAllownces(' + allownceCount + ')" value="x" class="btn btn-sm btn-dark btn-xs" /></td>' +
                                '<td></td>' +
                                '</tr>';
                            $("#allownceTable").find('tbody').append(tableRow);
                            allownceCount++;
                        }
                    }
                 );
    }

    function getStaffAllownces()
    {
        var staffId = 0;
        @if(Model != null )
        {
            <text>
        staffId = @Model.StaffId;
        </text>
        }
        allownceCount = 0;
        $.post( AppDetail() +"/Staff/GetStaffIncrementDetail",
                    { staffId: staffId },
                    function (response) {
                        //alert(response[0][0]);
                        for (var i = 0; i < response.length; i++) {
                            var tableRow = '<tr class="even pointer" id="allRow' + allownceCount + '"><td></td>' +
                                '<td>' + response[i][0] + '</td>' +
                                '<td><input type="number" style="width:100px;" value="' + response[i][1] + '" id="valAllownce' + allownceCount + '" hidden="hidden"></td>' +
                                '<td><input type="number" style="width:100px;" value="' + response[i][2] + '" id="txtAllownce' + allownceCount + '"></td>' +
                                '<td></td>' +
                                '<td><input type="number" style="width:100px;" id="incAllownce' + allownceCount + '" ></td>' +
                                //'<td><input type="button" onclick=" onclick=RemoveItemAllownces(' + allownceCount + ')" value="x" class="btn btn-sm btn-dark btn-xs" /></td>' +
                                '<td></td>' +
                                '</tr>';
                            $("#allownceTable").find('tbody').append(tableRow);
                            allownceCount++;
                        }
                    }
                 );
    }


    function AddRowInAllownces() {
        var e = document.getElementById("allowenceDD");
        var strAllownce = e.options[e.selectedIndex].text;
        var allownceValue = e.options[e.selectedIndex].value;
        //alert(strUser1);
        var alreadyFlag = false;
        var table = document.getElementById("allownceTable");
        for (var i = 1, row; row = table.rows[i]; i++) {
            var allownceText = row.cells[1].firstChild.nodeValue;
            if (allownceText == strAllownce)
            {
                alreadyFlag = true;
            }
        }

        if (alreadyFlag == false) {
            var tableRow = '<tr class="even pointer" id="allRow' + allownceCount + '"><td></td>' +
                            '<td>' + strAllownce + '</td>' +
                            '<td><input type="number" style="width:100px;" value="' + allownceValue + '" id="valAllownce' + allownceCount + '" hidden="hidden"></td>' +
                            '<td><input type="number" style="width:100px;" id="txtAllownce' + allownceCount + '"></td>' +
                            '<td></td>' +
                            '<td><input type="number" style="width:100px;" id="incAllownce' + allownceCount + '" ></td>' +
                            '<td><input type="button" onclick=" onclick=RemoveItemAllownces(' + allownceCount + ')" value="x" class="btn btn-sm btn-dark btn-xs" /></td>' +
                            '</tr>';
            $("#allownceTable").find('tbody').append(tableRow);
            allownceCount++;
            document.getElementById('allownceLable').innerHTML = '';
        }
        else {
            document.getElementById('allownceLable').innerHTML = 'Allownce is already added in table';
        }
    }

    function RemoveItem(removeIndex) {
        //alert(removeIndex);
        var currentrow = document.getElementById('eduRow' + removeIndex);
        document.getElementById('classTable').deleteRow(currentrow.rowIndex);
    }

    function RemoveItemAllownces(removeIndex) {
        //alert(removeIndex);
        var currentrow = document.getElementById('allRow' + removeIndex);
        document.getElementById('allownceTable').deleteRow(currentrow.rowIndex);
    }

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#stdImage')
                    .attr('src', e.target.result)
                    .width(150)
                    .height(200);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }

    function gotoSearch() {
        $('#clickUp').click();

    }



    function resetSearch() {

        $('#fatherNameSearch').val("");
        $('#nameSearch').val("");
        $('#staffIdSearch').val("");

    }

    function UploadImage() {
        debugger;
        var data = new FormData();
        var files = $("#imgInp").get(0).files;
        if (files.length > 0) {
            data.append("UploadedImage", files[0]);


            // Make Ajax request with the contentType = false, and procesDate = false
            var ajaxRequest = $.ajax({
                type: "POST",
                url: AppDetail() + "/Student/UploadImage",
                contentType: false,
                processData: false,
                data: data
            });
            ajaxRequest.done(function (xhr, textStatus) {
                //alert('Image Uploaded successfully')
            });
        }

    }

    function UploadStaffData()
    {
        var staffAllownces = [];
        var table = document.getElementById("allownceTable");
        for (var i = 1, row; row = table.rows[i]; i++) {
            var allownceText = row.cells[1].firstChild.nodeValue;
            var allownceAmount = document.getElementById("txtAllownce" + (i - 1)).value;
            var allownceId = document.getElementById("valAllownce" + (i - 1)).value;
            var incAllownce = document.getElementById("incAllownce" + (i - 1)).value;
            var staffAllownce = {
                "AllownceId": allownceId,
                "Amount": allownceAmount,
                "Increment": incAllownce
            }
            staffAllownces[i - 1] = staffAllownce;
        }
        //alert(staffAllownces);
        var staffAllowncesListJson = JSON.stringify(staffAllownces);
        $.ajax({
            url: AppDetail() + '/StaffSalary/SaveStaffAllownces',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: staffAllowncesListJson,// JSON.stringify(tagsList) },//JSON.stringify({ 'tagsList': tagsList }),
            statusCode: {
                200: function () { return true; },
                500: function () {
                }
            },

            jsonp: 'jsonp'
        });



    }

</script>

