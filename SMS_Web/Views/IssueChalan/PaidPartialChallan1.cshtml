@model List<SMS_DAL.ViewModel.IssuedChallanViewModel>

@{
    ViewBag.Title = "Create";
}

<script>

    function getSectionList() {
        var classId = $("#classId").val();
        //alert(classId);
        $("#sectionId").html("");
        //$("#sectionId").append('<option value='+0+'>All</option>');
        @foreach (var item in (IEnumerable<SMS_DAL.ViewModel.ClassSectionModel>)ViewData["classSection"])
        {

            <text>
        if(classId == '')
        {
            var id = @(item.SectionId);
            var name = '@(item.SectionName)';
            $("#sectionId").append('<option value='+id+'>'+name+'</option>');
        }
        else if(classId == @(item.ClassId))
            {
            var id = @(item.SectionId);
            var name = '@(item.SectionName)';
        $("#sectionId").append('<option value='+id+'>'+name+'</option>');
    }
    </text>
         }

    }

</script>
<head>
    @*<link rel="stylesheet" href="../../css/print.css">*@
    </head>

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">

            <div class="x_title">
                <label class="nav navbar-left control-label"  align="left">Paid Chalan Search</label>
                <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                    <div>
                        @Html.ValidationSummary()
                        @*<label class="control-label" align="left" for="first-name"
                               style=@((Convert.ToInt32(ViewData["Error"]) == 4) ? "display:block;color:green;font-size:11px;" : "display:none" )>
                            Partial Paid Challan is saved succesfully.
                        </label>
                        <label class="control-label" align="left" for="first-name"
                               style=@((Convert.ToInt32(ViewData["Error"]) == 41) ? "display:block;color:green;font-size:11px;" : "display:none" )>
                            UnPaid Partial Challan is saved succesfully.
                        </label>
                        <label class="control-label" align="left" for="first-name"
                               style=@((Convert.ToInt32(ViewData["Error"]) == 420) ? "display:block;color:red;font-size:11px;" : "display:none")>
                            Unable to Save Partial Paid Challan.
                        </label>
                        <label class="control-label" align="left" for="first-name"
                               style=@((Convert.ToInt32(ViewData["Error"]) == 5) ? "display:block;color:red;font-size:11px;" : "display:none")>
                            Issue Chalan for all selected student(s) to Create Pdf.
                        </label>
                        <label class="control-label" align="left" for="first-name"
                               style=@((Convert.ToInt32(ViewData["Error"]) == 81) ? "display:block;color:red;font-size:11px;" : "display:none")>
                            Pleas eneter Paid Amount for all the selected student(s).
                        </label>
                        <label class="control-label" align="left" for="first-name"
                               style=@((Convert.ToInt32(ViewData["Error"]) == 6) ? "display:block;color:red;font-size:11px;" : "display:none")>
                            Select Student(s) to Save Paid Chalan.
                        </label>
                        <label class="control-label" align="left" for="first-name"
                               style=@((Convert.ToInt32(ViewData["Error"]) == 61) ? "display:block;color:red;font-size:11px;" : "display:none")>
                            Select Student(s) to Save UnPaid Chalan.
                        </label>
                        <label class="control-label" align="left" for="first-name"
                               style=@((Convert.ToInt32(ViewData["Error"]) == 7) ? "display:block;color:red;font-size:11px;" : "display:none")>
                            Search Student(s) to Save Paid Chalan.
                        </label>
                        <label class="control-label" align="left" for="first-name"
                               style=@((Convert.ToInt32(ViewData["Error"]) == 71) ? "display:block;color:red;font-size:11px;" : "display:none")>
                            Search Student(s) to Save UnPaid Chalan.
                        </label>
                        <label class="control-label" align="left" for="first-name"
                               style=@((Convert.ToInt32(ViewData["Error"]) == 72) ? "display:block;color:red;font-size:11px;" : "display:none")>
                            Please select paid challan(s) to Save as UnPaid.
                        </label>
                        <label class="control-label" align="left" for="first-name"
                               style=@((Convert.ToInt32(ViewData["Error"]) == 8) ? "display:block;color:red;font-size:11px;" : "display:none")>
                            Due Date must be greater than Issued date.
                        </label>
                        <label class="control-label" align="left" for="first-name"
                               style=@((Convert.ToInt32(ViewData["Error"]) == 109) ? "display:block;color:red;font-size:11px;" : "display:none")>
                            Some of the challans are not issued, Please issue first.
                        </label>
                        <label class="control-label" align="left" for="first-name"
                               style=@((Convert.ToInt32(ViewData["Error"]) == 421) ? "display:block;color:red;font-size:11px;" : "display:none")>
                            Unable to Save UnPaid Partial Challan.
                        </label>*@
                        @*<label class="control-label" align="left" for="first-name"
                                   style=@((Convert.ToInt32(ViewData["Error"]) == 10) ? "display:block;color:red;font-size:11px;" : "display:none")>
                                Student Cards generated succesfully.
                            </label>*@
                    </div>
                </div>
                <div class="nav navbar-right">
                    <input type="button" value="Help" name="Help" onclick="@("window.location.href='" + @Url.Action("Index", "Video", new { id = 20}) + "'");"
                           class="btn btn-success btn-xs" style="border-radius: 50%;width:60px; height:25px;" />
                </div>

                <div class="clearfix"></div>
            </div>

            <div class="x_content">


                @using (Html.BeginForm(Html.BeginForm("SearchPartialPaidChalan", "IssueChalan", FormMethod.Post, new { enctype = "multipart/form-data" })))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    <fieldset>
                        <div class="form-group row">

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Year
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    @Html.DropDownList("YearId", (IEnumerable<SelectListItem>)ViewBag.YearId, new { @class = "form-control input-sm input-sm", id = "yearIdSearch" })
                                    @*@Html.ValidationMessageFor(model => model.SectionId)*@

                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Month
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    @Html.DropDownList("MonthId", (IEnumerable<SelectListItem>)ViewBag.MonthId, new { @class = "form-control input-sm", id = "monthIdSearch" })
                                    @*@Html.ValidationMessageFor(model => model.SectionId)*@

                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Class
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    @Html.DropDownList("ClassId", (IEnumerable<SelectListItem>)ViewBag.ClassId, new { @class = "form-control input-sm", onchange = "getSearchSectionList()", id = "classIdSearch" })
                                    @*@Html.ValidationMessageFor(model => model.ClassId)*@

                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Section
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    @Html.DropDownList("SectionId", (IEnumerable<SelectListItem>)ViewBag.SectionId, "All", new { @class = "form-control input-sm", id = "sectionIdSearch" })
                                    @*@Html.ValidationMessageFor(model => model.SectionId)*@

                                </div>
                            </div>


                        </div>
                        <div class="form-group row">

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Chalan No
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    @*@Html.TextBoxFor(model => model.RollNumber, new { @class = "form-control input-sm", id = "rollNoSearch" })
                                        @Html.ValidationMessageFor(model => model.RollNumber)*@
                                    <input type="number" name="ChalanNo" class="form-control input-sm" />
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Roll No
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    <input type="text" name="RollNo" class="form-control input-sm" />
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Name
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    @*@Html.TextBoxFor(model => model.Name, new { @class = "form-control input-sm", id = "nameSearch" })*@
                                    <input type="text" name="Name" class="form-control input-sm" />
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Father Name
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    @*@Html.TextBoxFor(model => model.FatherName, new { @class = "form-control input-sm", id = "fatherNameSearch" })*@
                                    <input type="text" name="FatherName" class="form-control input-sm" />
                                </div>
                            </div>

                           

                        </div>

                        <div class="form-group row">
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Father Cnic
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    @*@Html.TextBoxFor(model => model.FatherName, new { @class = "form-control input-sm", id = "fatherNameSearch" })*@
                                    <input type="text" name="FatherCnic" class="form-control input-sm" />
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px">
                                Admission No
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    <input type="text" name="AdmissionNo" class="form-control input-sm" />
                                    @*@Html.TextBoxFor(model => model.Name, new { @class = "form-control input-sm", id = "nameSearch" })*@
                                </div>
                            </div>


                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px">
                                Father Contact
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    <input type="text" name="FatherContact" class="form-control input-sm" />
                                    @*@Html.TextBoxFor(model => model.Name, new { @class = "form-control input-sm", id = "nameSearch" })*@
                                </div>
                            </div>

                        </div>

                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="nav navbar-right">
                                <input type="submit" value="Find" name="Search" class="btn btn-sm btn-info btn-squar" />

                            </div>
                        </div>
                    </fieldset>
                }
            </div>
        </div>
    </div>
</div>

<style>
   

    .txt-squar {
        
    }
</style>

<div class="row" id="searchPanelData" style="display:none;">
    <div class="col-md-12 col-sm-12 col-xs-12">
        @using (Html.BeginForm("SavePaidChalan", "IssueChalan", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <fieldset>
                <div class="x_panel">
                    <div class="x_title">
                        <h2>@*Paid Chalan Detail*@</h2>
                        <ul class="nav navbar-right panel_toolbox">

                            <li>
                                @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                            </li>
                            <li>
                                @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                            </li>

                        </ul>

                        <label class="nav navbar-right control-label col-md-4 col-sm-4 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                        </label>

                        

                        <div class="nav navbar-right col-md-2 col-sm-2 col-xs-12" align="right">
                            <div>
                                @Html.DropDownList("FinanceAccountId", (IEnumerable<SelectListItem>)ViewBag.FinanceAccountId, new { @class = "form-control input-sm", id = "financeAccountId" })
                            </div>
                        </div>

                        <div class="nav navbar-right col-md-2 col-sm-2 col-xs-12" align="right">
                            <div>
                                @Html.DropDownList("AccountTypeId", (IEnumerable<SelectListItem>)ViewBag.AccountTypeId, new { @class = "form-control input-sm", @onchange = "ChangeAccountType()", id = "accountTypeId" })
                            </div>
                        </div>

                        <label class="nav navbar-right control-label col-md-1 col-sm-1 col-xs-12" align="right" style="font-size: 11px;" for="last-name">
                            Pay To
                        </label>

                        <div class="nav navbar-right col-md-2 col-sm-2 col-xs-12" align="right">
                            <div>
                                <input type="text" name="FullChallanPayment" value="0" class="form-control input-sm" style="display:none;">
                                <input type="date" name="PaidDate" class="form-control input-sm" id="paidDate">
                            </div>
                        </div>
                        <label class="nav navbar-right control-label col-md-1 col-sm-1 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                            Paid Date
                        </label>

                        <div class="clearfix"></div>
                        <div class="ln_solid" style="margin-top:10px;"></div>

                        <form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">

                            <div class="form-group">
                                <div class="table-responsive">
                                    <table class="table table-striped jambo_table bulk_action" id="classTable" name="model">
                                        <thead>
                                            <tr class="headings">
                                                <th>

                                                </th>
                                                <th>

                                                </th>
                                                <th>
                                                    @*<input type="checkbox" id="cbSelectAll" style="width:20px;height:20px;" onclick="CheckAllCheckBoxes();" />*@
                                                    @if (Model != null && Model.Count > 0)
                                                    {
                                                        <input type="text" value="@Model.Count" id="statusIdAll" style="display: none;" />
                                                    }
                                                    else
                                                    {
                                                        <input type="text" value="0" id="statusIdAll" style="display: none;" />
                                                    }
                                                </th>
                                                <th style="min-width:70px;">
                                                    <label>Paid</label>
                                                </th>
                                                <th style="min-width:100px;">
                                                    <label>Roll No.</label>
                                                </th>
                                                <th style="min-width:200px;">
                                                    <label>Name</label>
                                                </th>
                                                <th style="min-width:200px;">
                                                    <label>Contact</label>
                                                </th>
                                                <th style="min-width:150px;">
                                                    <label>Paid Fee</label>
                                                </th>
                                                <th style="min-width:70px;">
                                                    <label>Fine</label>
                                                </th>
                                                <th style="min-width:100px;">
                                                    <label>Total Fee</label>
                                                </th>
                                                <th style="min-width:200px;">
                                                    <label>Challan</label>
                                                </th>
                                                <th style="min-width:150px;">
                                                    <label>Paid Date</label>
                                                </th>

                                                <th style="min-width:150px;">
                                                    <label>Due Date</label>
                                                </th>

                                                <th style="min-width:100px;">
                                                    <label>Balance</label>
                                                </th>
                                                <th style="min-width:100px;">
                                                    <label>Advance</label>
                                                </th>
                                            </tr>

                                        </thead>
                                        <tbody style="background-color:white;color:#2A3F54" id="classBody">
                                            @if (Model != null)
                                            {
                                                for (int i = 0; i < Model.Count; i++)
                                                {
                                                    <tr>
                                                        <td></td>
                                                        <td>
                                                            <button type="button" class="btn btn-xs btn-info btn-squar" onclick="GetPaidChallanDetail(@i)" data-toggle="modal" data-target=".bs-example-modal-sm">Detail</button>
                                                        </td>
                                                        <td>
                                                            @if (Model[i].IsPaid.ToLower().Equals("yes"))
                                                            {
                                                                if (SMS_Web.Controllers.SecurityAssurance.UserPermissionController.GetSessionModel(Session.SessionID).USER_SUB_MODULE_PERMISSIONS.ToString().Contains("|Fee Edit|") == true)
                                                                {
                                                                    <input type="checkbox" onchange="EnableAmountTextBox(@i)" id="@("checkbox" + i)" name="ChalanIds" value="@Model[i].Id" style="width:20px;height:20px;">
                                                                }
                                                                else
                                                                {
                                                                    <input type="checkbox" onchange="EnableAmountTextBox(@i)" id="@("checkbox" + i)" name="ChalanIds" value="@Model[i].Id" style="width:20px;height:20px;" disabled>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <input type="checkbox" onchange="EnableAmountTextBox(@i)" id="@("checkbox" + i)" name="ChalanIds" value="@Model[i].Id" style="width:20px;height:20px;">
                                                            }
                                                            <input type="checkbox" name="Indexes" value="@i" id="@("cbSelect" + i)" style="width:20px;height:20px;" hidden="hidden">
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(m => m[i].IsPaid, new { @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(m => m[i].RollNumber, new { @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                                        </td>
                                                        <td style="width:200px;">
                                                            @Html.TextBoxFor(m => m[i].Name, new { @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Model[i].Contact_1
                                                        </td>
                                                        <td style="width:100px;">
                                                            @Html.TextBoxFor(m => m[i].PaidAmount, new { Name = "PaidAmount", @class = "form-control input-sm", @style = "background-color: transparent;", @readonly = "readonly", @id = ("textbox" + i) })
                                                        </td>
                                                        <td style="width:70px;">
                                                            @Html.TextBoxFor(m => m[i].Fine, new { Name = "Fine", @class = "form-control input-sm", @style = "background-color: transparent;", @readonly = "readonly", @id = ("feebox" + i) })
                                                        </td>
                                                        <td style="width:150px;">
                                                            @Html.TextBoxFor(m => m[i].Amount, new { Name = "ChalanAmount", @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(m => m[i].Chalan, new { @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @name = "Amount", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @if (Model[i].IssuedDate != Model[i].PaidDate)
                                                            {
                                                                @Html.TextBoxFor(m => m[i].PaidDate, new { @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @name = "Amount", @readonly = "readonly" })
                                                            }
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(m => m[i].DueDate, new { @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @name = "Amount", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(m => m[i].Balance, new { Name = "Balance", @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(m => m[i].Advance, new { Name = "Advance", @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;", @readonly = "readonly" })
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                                <div class="form-group row" style="margin-top:20px;">
                                    <div class="nav navbar-right">
                                        <button type="button" class="btn btn-sm btn-info btn-squar" onclick="GetPaidChallanDetail()" data-toggle="modal" data-target=".bs-example-modal-sm">Paid Challan Detail</button>
                                        <input type="submit" value="Save UnPaid" onclick="setUnpaid()" class="btn btn-sm btn-info btn-squar" />
                                        <input type="submit" value="Save Paid" onclick="SaveChallanDetail()" class="btn btn-sm btn-info btn-squar" />
                                    </div>
                                </div>
                        </form>
                    </div>
                </div>

            </fieldset>

        }
    </div>
</div>


<div class="modal fade bs-example-modal-sm btn-squar" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-sm btn-squar" style="width:600px;">
        <div class="modal-content btn-squar">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel2">Fee Challan Detail</h4>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-striped jambo_table bulk_action" id="allownceTable" name="model">
                        <thead>
                            <tr class="headings">
                                <th>
                                </th>
                                <th hidden="hidden">
                                </th>
                                <th hidden="hidden">
                                </th>
                                <th style="min-width:80px;">
                                    <label>Fee Head</label>
                                </th>
                                <th style="min-width:100px;">
                                    <label>Total Amount</label>
                                </th>

                                <th style="min-width:100px;">
                                    <label>Paid Amount</label>
                                </th>

                                <th>
                                </th>
                            </tr>

                        </thead>
                        <tbody style="background-color:white;color:#2A3F54" id="classBody"></tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-info btn-squar" data-dismiss="modal" onclick="setAmount();">Ok</button>
            </div>
        </div>
    </div>
</div>


<script>

    var isFilled = 0, previousChallanId = 0;
    function populateErrors()
    {
       @if(ViewData["Error"] != null)
       {
           if ((int)@ViewData["Error"] == 4)
           { 
               <text> showNotification('Paid Challan is saved succesfully.', 'Success', 'Success') </text>
           }
       else if ((int)@ViewData["Error"] == 41)
           { 
               <text> showNotification('UnPaid Challan is saved succesfully.', 'Success', 'Success') </text>
           }
       else if ((int)@ViewData["Error"] == 20)
           { 
               <text> showNotification('Annual Charges of selected student(s) is reset successfully.', 'Info', 'Info') </text>
           }
       else if ((int)@ViewData["Error"] == 420)
           { 
               <text> showNotification('Unable to Save Paid Challan.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 5)
           { 
               <text> showNotification('Issue Chalan for all selected student(s) to Create Pdf.', 'Info', 'Info') </text>
           }
       else if ((int)@ViewData["Error"] == 6)
           { 
               <text> showNotification('Select Student(s) to Save Paid Chalan.', 'Info', 'Info') </text>
           }
       else if ((int)@ViewData["Error"] == 61)
           { 
               <text> showNotification('Select Student(s) to Save UnPaid Chalan.', 'Info', 'Info') </text>
           }
       else if ((int)@ViewData["Error"] == 81)
           { 
               <text> showNotification('Pleas eneter Paid Amount for all the selected student(s).', 'Info', 'Info') </text>
           }
       else if ((int)@ViewData["Error"] == 7)
           { 
               <text> showNotification('Search Student(s) to Save Paid Chalan.', 'Info', 'Info') </text>
           }
       else if ((int)@ViewData["Error"] == 71)
           { 
               <text> showNotification('Search Student(s) to Save UnPaid Chalan.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 72)
           { 
               <text> showNotification('Please select paid challan(s) to Save as UnPaid.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 8)
           { 
               <text> showNotification('Due Date must be greater than Issued date.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 109)
           { 
               <text> showNotification('Some of the challans are not issued, Please issue first.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 421)
           { 
               <text> showNotification('Search Student(s) to Create Pdf of Issue Chalan.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 11)
           { 
               <text> showNotification('Unable to Save UnPaid Challan.', 'Error', 'Error') </text>
           }
       }
    }

    var lastIndex = -1;
    window.onload = function (e) {
        ShowSearchPanel(@((Model == null || Model.Count == 0) ? 0 : Model.Count));
        resetSearch();
        populateErrors();
        ChangeAccountType();
        //getFine();
        //ChangeDuesStatus();

        //$("#yearIdSearch").val("2017");
        //$("#monthIdSearch").val("November");

        $('#paidDate').val('@(DateTime.Now.ToString("yyyy-MM-dd"))');

        var d = new Date();
        var month = d.getMonth();
        var year = d.getFullYear();


        //$("#yearIdSearch").get(0).selectedIndex = year - 2016;
        $("#monthIdSearch").get(0).selectedIndex = month;

        var classId = '@(ViewData["GlobalClassId"] == null ? 0 : (int)ViewData["GlobalClassId"])';
        var sectionId = '@(ViewData["GlobalSectionId"] == null ? 0 : (int)ViewData["GlobalSectionId"])';
        var monthId = '@(ViewData["GlobalMonthId"] == null ? 0 : (int)ViewData["GlobalMonthId"])';
        var yearId = '@(ViewData["GlobalYearId"] == null ? 0 : (int)ViewData["GlobalYearId"])';

        if(classId != 0)
        {
            $("#classIdSearch").val(classId);
        }
        else
        {
            getSectionList();
        }

        if(sectionId != 0)
        {
            $("#sectionIdSearch").val(sectionId);
        }

        if(monthId != 0)
        {
            $("#monthIdSearch").val(monthId);
        }

        if(yearId != 0)
        {
            $("#yearIdSearch").val(yearId);
        }

    }

    function EnableAmountTextBox(index)
    {
        var tableBody = document.getElementById("classBody");
        var rows = tableBody.getElementsByTagName("tr");
        var tdObj = rows[index].getElementsByTagName("td")[0];
        if(document.getElementById("checkbox" + index).checked)
        {
            document.getElementById("cbSelect" + index).checked = true;
            //document.getElementById("textbox" + index).readOnly = false;
            document.getElementById("feebox" + index).readOnly = false;
        }
        else
        {
            document.getElementById("cbSelect" + index).checked = false;
            //document.getElementById("textbox" + index).readOnly = true;
            document.getElementById("feebox" + index).readOnly = true;
        }
        if(lastIndex != -1)
        {
            document.getElementById("checkbox" + lastIndex).checked = false;
            document.getElementById("cbSelect" + lastIndex).checked = false;
            document.getElementById("feebox" + lastIndex).readOnly = true;
        }
        lastIndex = index;
    }

    function CheckAllCheckBoxes()
    {
        var rowCount = $('#statusIdAll').val();
        if($("#cbSelectAll").is(':checked') == true)
        {
            checkCount = rowCount;
            for( var i = 0 ; i < rowCount; i++)
            {
                SelectElement("checkbox"+i, true);
                SelectElement("cbSelect"+i, true);
                document.getElementById("textbox" + i).readOnly = false;
                document.getElementById("feebox" + i).readOnly = false;
            }
        }
        else
        {
            checkCount = 0;
            for( var i = 0 ; i < rowCount; i++)
            {
                SelectElement("checkbox"+i, false);
                SelectElement("cbSelect"+i, false);
                document.getElementById("textbox" + i).readOnly = true;
                document.getElementById("feebox" + i).readOnly = true;
            }
        }
    }

    function SelectElement(id, valueToSelect)
    {    
        var element = document.getElementById(id);
        element.checked  = valueToSelect;
    }

    function setUnpaid()
    {
        $.ajax({
            url: AppDetail() + '/IssueChalan/setUnpaid',
            type: 'Get',
            contentType: 'application/json',
            dataType: 'json',
            statusCode: {
                200: function (data) {

                },
                500: function () {
                }
            },
        });
    }

    function setAmount()
    {
        var rowCount = $('#statusIdAll').val();
        var allownceCount = 0;
        for( var i = 0 ; i < rowCount; i++)
        {
            if($("#checkbox"+i).is(':checked') == true)
            {
                $("#textbox"+i).val($("#txtTotal").val());
            }
        }

        isFilled = 1;
        
    }
    
    function GetPaidChallanDetail(index)
    {
        //var Table = document.getElementById("allownceTable");
        //Table.innerHTML = "";

        

            var rowCount = $('#statusIdAll').val();
            var allownceCount = 0;
            for( var i = 0 ; i < rowCount; i++)
            {
                if($("#checkbox"+i).is(':checked') == true || i == index)
                {
                    var challanId =  $("#checkbox"+i).val();

                    if( previousChallanId == 0 || previousChallanId != challanId)
                    {
                        $("#allownceTable > tbody").html("");
                        previousChallanId = challanId;
                        $.post( AppDetail() +"/IssueChalan/GetPaidChallanDetail",
                            { challanId: challanId },
                            function (response) {
                                //alert(response[0][0]);
                                for (var i = 0; i < response.length; i++) {
                                    var tableRow = '<tr class="even pointer" id="allRow' + allownceCount + '"><td></td>' +
                                        '<td hidden="hidden">' + response[i][2] + '</td>' +
                                        '<td hidden="hidden">' + response[i][3] + '</td>' +
                                        '<td>' + response[i][0] + '</td>' +
                                        '<td>' + response[i][1] + '</td>';
                                    if(response[i][1].length == 0)
                                    {
                                        tableRow = '<tr bgcolor="pink" class="even pointer" id="allRow' + allownceCount + '"><td></td>' +
                                        '<td hidden="hidden">' + response[i][2] + '</td>' +
                                        '<td hidden="hidden">' + response[i][3] + '</td>' +
                                        '<td>' + response[i][0] + '</td>' +
                                        '<td>' + response[i][1] + '</td>';
                                        tableRow += '<td></td>' +
                                        '<td></td>' +
                                        '</tr>';
                                    }
                                    else if(response[i][4].length > 1)
                                    {
                                        if(i == response.length - 1 )
                                        {
                                            tableRow += '<td><input type="number" id="txtTotal" value="' + response[i][4] + '" /></td>' +
                                           '<td></td>' +
                                           '</tr>';
                                        }
                                        else
                                        {
                                            tableRow += '<td><input type="number" class="txt-squar" onchange="calculateTotal()" value="' + response[i][4] + '" /></td>' +
                                            '<td></td>' +
                                            '</tr>';
                                        }
                                    }
                                    else
                                    {
                                        if(i == response.length - 1 )
                                        {
                                            tableRow += '<td><input type="number" id="txtTotal" value="0" /></td>' +
                                           '<td></td>' +
                                           '</tr>';
                                        }
                                        else
                                        {
                                            tableRow += '<td><input type="number" class="txt-squar" onchange="calculateTotal()" value="0" /></td>' +
                                           '<td></td>' +
                                           '</tr>';
                                        }
                                    }
                               
                                    $("#allownceTable").find('tbody').append(tableRow);
                                    allownceCount++;
                                }
                            }
                         );
                    }

                    break;
                }
            }
    }

    function SetFine()
    {
        var fine = $("#fineValue").val();
        $.ajax({
            url: AppDetail() + '/IssueChalan/SetFine',
            type: 'Get',
            contentType: 'application/json',
            dataType: 'json',
            data: { 'Fine': fine},
            statusCode: {
                200: function (data) {

                },
                500: function () {
                }
            },
        });
    }

    function calculateTotal()
    {
        var txtList = document.getElementsByClassName("txt-squar");
        var i;
        var total  = 0;
        for (i = 0; i < txtList.length; i++) {
            var parseTotal = ((txtList[i] == null || txtList[i].value == null || txtList[i].value.length == 0) ? 0 : txtList[i].value);
            total += parseInt(parseTotal , 10);
        }
        document.getElementById('txtTotal').value = total;
        //alert(total);
    }

    function getFine() {
        //alert(classId);
        $.ajax({
            url: AppDetail() + '/IssueChalan/GetFine',
            type: 'Get',
            contentType: 'application/json',
            dataType: 'json',
            statusCode: {
                200: function (data) {
                    var json2 = JSON.parse(data);
                    $('#fineValue').val(json2);
                },
                500: function () {
                }
            },
        });
    }

    function EnableCampus() {
        var admType = $("#admType").val();
        if (admType == '3')
            document.getElementById("campus").readOnly = false;
        else
            document.getElementById("campus").readOnly = true;
    }

    function ChangeLeavingDate()
    {
        document.getElementById("leavingDate").value = "";
    }
    function ChangeDuesStatus() {
        if(document.getElementById("dues").value == true)
            document.getElementById("dues").value = false;
        else
            document.getElementById("dues").value = true;
    }

    function SaveChallanDetail()
    {
        isFilled = 0;
        debugger;
        var detailList = [];
        var rowCount = document.getElementById("allownceTable").rows.length;
        var txtList = document.getElementsByClassName("txt-squar");
        var objCount = 0;
        var i = 0;
        for (i = 1; i < rowCount - 1; i++){
            var rowData = document.getElementById("allownceTable").rows[i].cells;
           
            var headId = rowData[2].innerHTML;
            var type = rowData[1].innerHTML;
            var totalAmount = rowData[4].innerHTML;
            if(totalAmount.length > 0)
            {
                //alert(campusName)
                var detail = {
                    FeeHeadId: headId,
                    TotalAmount : totalAmount,
                    PayAmount: txtList[objCount].value,
                    Type: type
                };
                detailList[objCount] = detail;
                objCount++;
            }
        }
        $.ajax({
            url: AppDetail() + '/IssueChalan/SaveIssueChallanDetail',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: JSON.stringify(detailList),// JSON.stringify(tagsList) },//JSON.stringify({ 'tagsList': tagsList }),
            statusCode: {
                200: function () {
                },
                500: function () {
                }
            },
            jsonp: 'jsonp'
        });


    }

    function ChangeAccountType()
    {
        var accountTypeId = $("#accountTypeId").val();
        if(accountTypeId == 1)
        {
            accountTypeId = 13;
        }
        else
        {
            accountTypeId = 14;
        }

        $("#financeAccountId").html("");
        //$("#financeAccountId").append('<option value='+0+'>All</option>');
        @foreach (var item in (IEnumerable<SMS_DAL.ViewModel.FinanceFifthLvlAccountModel>)ViewData["financeAccounts"])
        {

                <text>
                if(accountTypeId == @(item.FinanceFourthLvlAccount.ThirdLvlAccountId))
        {
            var id = @(item.Id);
            var name = '@(item.AccountName)';
            $("#financeAccountId").append('<option value='+id+'>'+name+'</option>');
        }
    
        </text>
    }
    }


    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#stdImage')
                    .attr('src', e.target.result)
                    .width(150)
                    .height(200);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
    function UploadImage() {
        debugger;
        var data = new FormData();
        var files = $("#imgInp").get(0).files;
        if (files.length > 0) {
            data.append("UploadedImage", files[0]);


            // Make Ajax request with the contentType = false, and procesDate = false
            var ajaxRequest = $.ajax({
                type: "POST",
                url: AppDetail() + "/Student/UploadImage",
                contentType: false,
                processData: false,
                data: data
            });
            ajaxRequest.done(function (xhr, textStatus) {
                //alert('Image Uploaded successfully')
            });
        }
    }

    function gotoSearch() {
        $('#clickUp').click();

    }

    function resetSearch() {

        $('#fatherNameSearch').val("");
        $('#nameSearch').val("");
        $('#rollNoSearch').val("");

    }

    function getSearchSectionList() {
        var classId = $("#classIdSearch").val();
        //alert(classId);
        $("#sectionIdSearch").html("");
        $("#sectionIdSearch").append('<option value='+0+'>All</option>');
        @foreach (var item in (IEnumerable<SMS_DAL.ViewModel.ClassSectionModel>)ViewData["classSection"])
        {

            <text>
        if(classId == '')
        {
            var id = @(item.SectionId);
            var name = '@(item.SectionName)';
            $("#sectionIdSearch").append('<option value='+id+'>'+name+'</option>');
        }
        else if(classId == @(item.ClassId))
            {
                var id = @(item.SectionId);
                var name = '@(item.SectionName)';
        $("#sectionIdSearch").append('<option value='+id+'>'+name+'</option>');
    }
    </text>
    }
    
    }
</script>
@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@*@section Scripts {
        @Scripts.Render("bundles/jqueryval")
    }*@
