@model List<SMS_DAL.ViewModel.IssuedChallanViewModel>

@{
    ViewBag.Title = "Create";
}
<head>
    @*<link rel="stylesheet" href="../../css/print.css">*@
    </head>

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">

            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label"  align="left">Paid Chalan Search</label>
               
                <div class="nav navbar-right">
                    <input type="button" value="Help" name="Help" onclick="@("window.location.href='" + @Url.Action("Index", "Video", new { id = 19}) + "'");"
                          class="btn sc_help_btn btn-xs" />
                </div>

                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm(Html.BeginForm("SearchPaidChalan", "IssueChalan", FormMethod.Post, new { enctype = "multipart/form-data" })))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    <fieldset>
                        <div class="form-group row">

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Year
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    @Html.DropDownList("YearId", (IEnumerable<SelectListItem>)ViewBag.YearId, new { @class = "form-control input-sm input-sm", id = "yearIdSearch" })

                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Month
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    @Html.DropDownList("MonthId", (IEnumerable<SelectListItem>)ViewBag.MonthId, new { @class = "form-control input-sm", id = "monthIdSearch" })
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Class
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    @Html.DropDownList("ClassId", (IEnumerable<SelectListItem>)ViewBag.ClassId, new { @class = "form-control input-sm", onchange = "getChangeSectionList()", id = "classId" })
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Section
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    <select class="form-control input-sm" name="SectionId" id="sectionId"></select>

                                </div>
                            </div>


                        </div>
                        <div class="form-group row">

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Chalan No
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    <input type="number" name="ChalanNo" class="form-control input-sm" />
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Roll No
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    <input type="text" name="RollNo" class="form-control input-sm" />
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Name
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    <input type="text" name="Name" class="form-control input-sm" />
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Father Name
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    <input type="text" name="FatherName" class="form-control input-sm" />
                                </div>
                            </div>

                        </div>

                        <div class="form-group row">
                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px;">
                                Father Cnic
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    <input type="text" name="FatherCnic" class="form-control input-sm" />
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px">
                                Father Contact
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    <input type="text" name="FatherContact" class="form-control input-sm" />
                                </div>
                            </div>

                            <label class="control-label col-md-1 col-sm-1 col-xs-12" align="left" for="first-name" style="font-size: 11px">
                                Admission No
                            </label>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div>
                                    <input type="text" name="AdmissionNo" class="form-control input-sm" />
                                </div>
                            </div>
                        </div>

                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="nav navbar-right">
                                <input type="submit" value="Find" name="Search" class="btn btn-squar" />

                            </div>
                        </div>
                    </fieldset>
                }
            </div>
        </div>
    </div>
</div>


<div class="row" id="searchPanelData" style="display:none;">
    <div class="col-md-12 col-sm-12 col-xs-12">
        @using (Html.BeginForm("SavePaidChalan", "IssueChalan", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <fieldset>
                <div class="x_panel">
                    <div class="x_title sc_panel_header">

                        <label class="nav navbar-right control-label col-md-2 col-sm-2 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                        </label>

                        <div class="nav navbar-right col-md-2 col-sm-2 col-xs-12" align="right" style="margin-top:2px;">
                            <div>
                                <input type="button" value="Create Finance Account" onclick="return RouteToFinanceAccount()" align="right" class="btn btn-sm" style="color:black" />
                            </div>
                        </div>

                        <div class="nav navbar-right col-md-2 col-sm-2 col-xs-12" align="right" style="margin-top:2px;">
                            <div>
                                <select class="form-control input-sm" name="FinanceAccountId" id="financeAccountId"></select>
                            </div>
                        </div>

                        <div class="nav navbar-right col-md-2 col-sm-2 col-xs-12" align="right" style="margin-top:2px;">
                            <div>
                                @Html.DropDownList("AccountTypeId", (IEnumerable<SelectListItem>)ViewBag.AccountTypeId, new { @class = "form-control input-sm", @onchange = "ChangeAccountType()", id = "accountTypeId" })
                            </div>
                        </div>

                        <label class="nav navbar-right control-label col-md-1 col-sm-1 col-xs-12" align="right" style="font-size: 11px;margin-top:5px;" for="last-name">
                            Pay To
                        </label>

                        <div class="nav navbar-right col-md-2 col-sm-2 col-xs-12" align="right" style="margin-top:2px;">
                            <div>
                                <input type="date" name="PaidDate" class="form-control input-sm" id="paidDate">
                                <input type="text" name="FullChallanPayment" value="1" class="form-control input-sm" style="display:none;">
                                <input type="hidden" name="BranchId" class="form-control input-sm" id="BranchId" value="@ViewData["branchId"]">
                            </div>
                        </div>
                        <label class="nav navbar-right control-label col-md-1 col-sm-1 col-xs-12" style="margin-top:5px;font-size: 11px;" align="right" for="last-name">
                            Paid Date
                        </label>

                    </div>


                    <div class="x_content">
                        <form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">

                            <div class="form-group">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered"  id="classTable" name="model">
                                        <thead>
                                            <tr class="headings">
                                                <th>
                                                </th>
                                                <th>
                                                    <input type="checkbox" id="cbSelectAll" style="width:20px;height:20px;" onclick="CheckAllCheckBoxes();" />
                                                    @if (Model != null && Model.Count > 0)
                                                    {
                                                        <input type="text" value="@Model.Count" id="statusIdAll" style="display: none;" />
                                                    }
                                                    else
                                                    {
                                                        <input type="text" value="0" id="statusIdAll" style="display: none;" />
                                                    }
                                                </th>
                                                <th style="max-width:50px;">
                                                    <label>Paid</label>
                                                </th>
                                                <th style="max-width:80px;">
                                                    <label>Roll No.</label>
                                                </th>
                                                <th style="max-width:200px;">
                                                    <label>Name</label>
                                                </th>
                                                <th style="max-width:200px;">
                                                    <label>Contact</label>
                                                </th>
                                                <th style="max-width:100px;">
                                                    <label>Paid Fee</label>
                                                </th>
                                                <th style="max-width:70px;">
                                                    <label>Fine</label>
                                                </th>
                                                <th style="max-width:100px;">
                                                    <label>Total Fee</label>
                                                </th>
                                                <th style="max-width:200px;">
                                                    <label>Challan</label>
                                                </th>
                                                <th style="max-width:170px;">
                                                    <label>Paid Date</label>
                                                </th>

                                                <th style="max-width:170px;">
                                                    <label>Due Date</label>
                                                </th>

                                                <th style="max-width:100px;">
                                                    <label>Balance</label>
                                                </th>
                                                <th style="max-width:100px;">
                                                    <label>Advance</label>
                                                </th>
                                            </tr>

                                        </thead>
                                        <tbody style="background-color:white;color:#2A3F54" id="classBody">
                                            @if (Model != null)
                                            {
                                                for (int i = 0; i < Model.Count; i++)
                                                {
                                                    <tr>
                                                        <td>
                                                            <button type="button" class="btn btn-xs btn-info btn-squar" onclick="GetPaidChallanDetail(@i)" data-toggle="modal" data-target=".bs-example-modal-sm">Detail</button>
                                                        </td>
                                                        <td>
                                                            @if (Model[i].IsPaid.ToLower().Equals("yes"))
                                                            {
                                                                if (SMS_Web.Controllers.SecurityAssurance.UserPermissionController.GetSessionModel(Session.SessionID).USER_SUB_MODULE_PERMISSIONS.ToString().Contains("|Fee Edit|") == true)
                                                                {
                                                                    <input type="checkbox" onchange="EnableAmountTextBox(@i)" id="@("checkbox" + i)" name="ChalanIds" value="@Model[i].Id" style="width:20px;height:20px;">
                                                                }
                                                                else
                                                                {
                                                                    <input type="checkbox" onchange="EnableAmountTextBox(@i)" id="@("checkbox" + i)" name="ChalanIds" value="@Model[i].Id" style="width:20px;height:20px;" disabled>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <input type="checkbox" onchange="EnableAmountTextBox(@i)" id="@("checkbox" + i)" name="ChalanIds" value="@Model[i].Id" style="width:20px;height:20px;">
                                                            }
                                                            <input type="checkbox" name="Indexes" value="@i" id="@("cbSelect" + i)" style="width:20px;height:20px;" hidden="hidden">
                                                        </td>
                                                        <td style="max-width:70px;">
                                                            @if (Model[i].IsPaid == "Yes")
                                                            {
                                                                <label class="nav control-label" style="font-size: 11px;color:green">Yes</label>
                                                            }
                                                            else
                                                            {
                                                                <label class="nav control-label" style="font-size: 11px;color:red">No</label>
                                                            }
                                                        </td>
                                                        <td style="max-width:80px;">
                                                            @Model[i].RollNumber
                                                        </td>
                                                        <td style="max-width:200px;">
                                                            @Model[i].Name
                                                        </td>
                                                        <td style="max-width:200px;">
                                                            @Model[i].Contact_1
                                                        </td>
                                                        <td style="max-width:100px;">
                                                            @Html.TextBoxFor(m => m[i].PaidAmount, new { Name = "PaidAmount", @class = "form-control input-sm", @style = "background-color: transparent;width:80px", @readonly = "readonly", @id = ("textbox" + i) })
                                                        </td>
                                                        <td style="max-width:70px;">
                                                            @Html.TextBoxFor(m => m[i].Fine, new { Name = "Fine", @class = "form-control input-sm", @style = "background-color: transparent;width:50px", @readonly = "readonly", @id = ("feebox" + i) })
                                                        </td>
                                                        <td style="max-width:100px;">
                                                            @Html.TextBoxFor(m => m[i].Amount, new { Name = "ChalanAmount", @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;width:60px", @readonly = "readonly", @id = ("textboxPaid" + i) })
                                                        </td>
                                                        <td style="max-width:200px;">
                                                            @Model[i].Chalan
                                                        </td>
                                                        <td style="max-width:170px;">
                                                            @if (Model[i].IssuedDate != Model[i].PaidDate)
                                                            {
                                                                @Model[i].PaidDate.ToString().Split(' ')[0]
                                                            }
                                                        </td>
                                                        <td style="max-width:170px;">
                                                            @Model[i].DueDate.ToString().Split(' ')[0]
                                                        </td>
                                                        <td style="max-width:100px;">
                                                            @Html.TextBoxFor(m => m[i].Balance, new { Name = "Balance", @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;width:60px", @readonly = "readonly" })
                                                        </td>
                                                        <td style="max-width:100px;">
                                                            @Html.TextBoxFor(m => m[i].Advance, new { Name = "Advance", @class = "form-control input-sm", @style = "border: 0; -webkit-box-shadow: none; box-shadow: none; border-color: inherit; background-color: transparent;width:60px", @readonly = "readonly" })
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                                <div class="form-group row" style="margin-top:20px;">
                                    <div class="nav navbar-right">
                                        <input type="submit" value="Save UnPaid" onclick="return setUnpaid()" id="unpaidChallan" class="btn btn-squar" />
                                        <input type="submit" value="Save Paid" onclick="return CheckFinanceAccount()" id="paidChallan" class="btn btn-squar" />
                                        @*<input type="submit" value="Save Paid" onclick="SaveChallanDetail()" class="btn btn-sm btn-info btn-squar" />*@
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

            </fieldset>

        }
    </div>
</div>


<div class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-sm btn-squar" style="width:600px;">
        <div class="modal-content btn-squar">
            <div class="modal-header" style="background-color:#151F2A;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" style="color:white;">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel2" style="color:white;font-weight:bold">Paid Fee Detail</h4>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered" id="allownceTable" name="model">
                        <thead style="color:black">
                            <tr class="headings">
                                <th hidden="hidden">
                                </th>
                                <th hidden="hidden">
                                </th>
                                <th style="min-width:80px;">
                                    Fee Head
                                </th>
                                <th style="min-width:100px;">
                                    Total Amount
                                </th>

                                <th style="min-width:100px;">
                                    Paid Amount
                                </th>
                            </tr>

                        </thead>
                        <tbody style="background-color:white;color:#2A3F54" id="classBody"></tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer" style="height:80px;">
                <button type="button" class="btn btn-lg btn-squar" data-dismiss="modal"> <span class="glyphicon glyphicon-ok"></span> Close</button>
            </div>
        </div>
    </div>
</div>


<script>

    function populateErrors()
    {
       @if(ViewData["Error"] != null)
       {
           if ((int)@ViewData["Error"] == 4)
           {
               <text> showNotification('Paid Challan is saved succesfully.', 'Success', 'Success') </text>
           }
       else if ((int)@ViewData["Error"] == 41)
           {
               <text> showNotification('UnPaid Challan is saved succesfully.', 'Success', 'Success') </text>
           }
       else if ((int)@ViewData["Error"] == 20)
           {
               <text> showNotification('Annual Charges of selected student(s) is reset successfully.', 'Info', 'Info') </text>
           }
       else if ((int)@ViewData["Error"] == 420)
           {
               <text> showNotification('Unable to Save Paid Challan.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 5)
           {
               <text> showNotification('Issue Chalan for all selected student(s) to Create Pdf.', 'Info', 'Info') </text>
           }
       else if ((int)@ViewData["Error"] == 6)
           {
               <text> showNotification('Select Student(s) to Save Paid Chalan.', 'Info', 'Info') </text>
           }
       else if ((int)@ViewData["Error"] == 61)
           {
               <text> showNotification('Select Student(s) to Save UnPaid Chalan.', 'Info', 'Info') </text>
           }
       else if ((int)@ViewData["Error"] == 81)
           {
               <text> showNotification('Pleas eneter Paid Amount for all the selected student(s).', 'Info', 'Info') </text>
           }
       else if ((int)@ViewData["Error"] == 7)
           {
               <text> showNotification('Search Student(s) to Save Paid Chalan.', 'Info', 'Info') </text>
           }
       else if ((int)@ViewData["Error"] == 71)
           {
               <text> showNotification('Search Student(s) to Save UnPaid Chalan.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 72)
           {
               <text> showNotification('Please select paid challan(s) to Save as UnPaid.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 8)
           {
               <text> showNotification('Due Date must be greater than Issued date.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 109)
           {
               <text> showNotification('Some of the challans are not issued, Please issue first.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 421)
           {
               <text> showNotification('Search Student(s) to Create Pdf of Issue Chalan.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 11)
           {
               <text> showNotification('Unable to Save UnPaid Challan.', 'Error', 'Error') </text>
           }
       }
    }

    $(document).ready(function() {
        $('#classTable').DataTable( {
            "lengthMenu": [[-1], ["All"]],
            paging: false, searching : false
    } );
    } );

    window.onload = function (e) {
        $("#classTable").DataTable();
        ShowSearchPanel(@((Model == null || Model.Count == 0) ? 0 : Model.Count));
        populateErrors();
        ChangeAccountType();
        $('#paidDate').val('@(DateTime.Now.ToString("yyyy-MM-dd"))');

        var d = new Date();
        var month = d.getMonth();
        var year = d.getFullYear();
        $("#monthIdSearch").get(0).selectedIndex = month;

        var classId = '@(ViewData["GlobalClassId"] == null ? 0 : (int)ViewData["GlobalClassId"])';
        if (classId != 0) {
            $("#classId").val(classId);
        }
        getSectionList();
    }

    function getSectionList() {
        var classId = $("#classId").val();
        if(classId.length == 0)
        {
            classId = 0;
        }
        GetClassSection(classId, 0, 'sectionId', 2, 0);
        //first : classId, seccond : load all option or not, third : section dd html id
        //fourth : any call function to call, fifth : sectionId to set in DD
    }

    function getChangeSectionList() {
        var classId = $("#classId").val();
        if (classId.length == 0) {
            classId = 0;
        }
        GetClassSection(classId, 0, 'sectionId', 0, 0);
        //first : classId, seccond : load all option or not, third : section dd html id
        //fourth : any call function to call, fifth : sectionId to set in DD
    }

    function setPrevSearchVals() {
        var sectionId = '@(ViewData["GlobalSectionId"] == null ? 0 : (int)ViewData["GlobalSectionId"])';
        var monthId = '@(ViewData["GlobalMonthId"] == null ? 0 : (int)ViewData["GlobalMonthId"])';
        var yearId = '@(ViewData["GlobalYearId"] == null ? 0 : (int)ViewData["GlobalYearId"])';

        if(sectionId != 0)
        {
            $("#sectionId").val(sectionId);
        }


        if(monthId != 0)
        {
            $("#monthIdSearch").val(monthId);
        }

        if(yearId != 0)
        {
            $("#yearIdSearch").val(yearId);
        }
    }

    function EnableAmountTextBox(index)
    {
        var tableBody = document.getElementById("classBody");
        var rows = tableBody.getElementsByTagName("tr");
        var tdObj = rows[index].getElementsByTagName("td")[0];
        if(document.getElementById("checkbox" + index).checked)
        {
            document.getElementById("cbSelect" + index).checked = true;
            //document.getElementById("textbox" + index).readOnly = false;
            document.getElementById("feebox" + index).readOnly = false;
            $('#textbox'+ index).val($('#textboxPaid' + + index).val());
        }
        else
        {
            document.getElementById("cbSelect" + index).checked = false;
            //document.getElementById("textbox" + index).readOnly = true;
            document.getElementById("feebox" + index).readOnly = true;
            $('#textbox' + index).val('');
        }
        //alert(document.getElementById("checkbox" + index).checked);

    }

    function CheckAllCheckBoxes()
    {
        var rowCount = $('#statusIdAll').val();
        if($("#cbSelectAll").is(':checked') == true)
        {
            checkCount = rowCount;
            for( var i = 0 ; i < rowCount; i++)
            {
                SelectElement("checkbox"+i, true);
                SelectElement("cbSelect"+i, true);
                document.getElementById("textbox" + i).readOnly = false;
                document.getElementById("feebox" + i).readOnly = false;
                EnableAmountTextBox(i);
            }
        }
        else
        {
            checkCount = 0;
            for( var i = 0 ; i < rowCount; i++)
            {
                SelectElement("checkbox"+i, false);
                SelectElement("cbSelect"+i, false);
                document.getElementById("textbox" + i).readOnly = true;
                document.getElementById("feebox" + i).readOnly = true;
                EnableAmountTextBox(i);
            }
        }
    }

    function SelectElement(id, valueToSelect)
    {
        var element = document.getElementById(id);
        element.checked  = valueToSelect;
    }

    function setUnpaid()
    {
        $.ajax({
            url: AppDetail() + '/IssueChalan/setUnpaid',
            type: 'Get',
            contentType: 'application/json',
            dataType: 'json',
            statusCode: {
                200: function (data) {

                },
                500: function () {
                }
            },
        });

        ConfirmAction('Are you sure, you want to reset the paid challans?', 'unpaidChallan');
        return false;
    }

    function CheckFinanceAccount()
    {
        var accountType = $("#accountTypeId option:selected").text();
        var accountCount = $("#financeAccountId").children('option').length;

        if(Number(accountCount) == 0)
        {
            showNotification('No Pay To ' +accountType+ ' Account is opened, Please open the Finance Account then Pay Challan', 'Error', 'Error')
            return false;
        }
        else
        {
            ConfirmAction('Are you sure, you want to paid the challans?', 'paidChallan');
        }

        return false;
    }

    function RouteToFinanceAccount()
    {
        var accountType = $("#accountTypeId").val();
        if(accountType.trim() == 1)
        {
            window.location.href = "/BankAccount/Index";
        }
        else
        {
            window.location.href = "/CashAccount/Index";
        }
    }


    function GetPaidChallanDetail(i)
    {
        //var Table = document.getElementById("allownceTable");
        //Table.innerHTML = "";
        $("#allownceTable > tbody").html("");

        //var rowCount = $('#statusIdAll').val();
        var allownceCount = 0;
        //for( var i = 0 ; i < rowCount; i++)
        //{
            //if($("#checkbox"+i).is(':checked') == true)
            //{
                var challanId =  $("#checkbox"+i).val();
                $.post( AppDetail() +"/IssueChalan/GetPaidChallanDetail",
                    { challanId: challanId },
                    function (response) {
                        //alert(response[0][0]);
                        for (var i = 0; i < response.length; i++) {
                            var tableRow = '<tr class="even pointer" id="allRow' + allownceCount + '">' +
                                '<td hidden="hidden">' + response[i][2] + '</td>' +
                                '<td hidden="hidden">' + response[i][3] + '</td>' +
                                '<td>' + response[i][0] + '</td>' +
                                '<td>' + response[i][1] + '</td>';

                            if(response[i][1].length == 0)
                            {
                                tableRow = '<tr class="even pointer" style="height:25px;font-weight:bold;color:red;background-color:lightgray;" id="allRow' + allownceCount + '">' +
                                '<td hidden="hidden">' + response[i][2] + '</td>' +
                                '<td hidden="hidden">' + response[i][3] + '</td>' +
                                '<td>' + response[i][0] + '</td>' +
                                '<td>' + response[i][1] + '</td>';

                                tableRow += '<td></td>' +
                                '</tr>';
                            }
                            else if(response[i][0].trim() == 'Total')
                            {
                                tableRow = '<tr class="even pointer" id="allRow' + allownceCount + '">' +
                                '<td hidden="hidden">' + response[i][2] + '</td>' +
                                '<td hidden="hidden">' + response[i][3] + '</td>' +
                                '<td style="font-weight:bold;color:black;">' + response[i][0] + '</td>' +
                                '<td style="font-weight:bold;color:black;">' + response[i][1] + '</td>';

                                tableRow += '<td></td>' +
                                '</tr>';
                            }
                            else if(response[i][4].length > 1)
                            {
                                if(i == response.length - 1 )
                                {
                                    tableRow += '<td><input type="number" id="txtTotal" readonly="readonly" value="' + response[i][4] + '" /></td>' +
                                   '</tr>';
                                }
                                else
                                {
                                    tableRow += '<td><input type="number" class="txt-squar" onchange="calculateTotal()" value="' + response[i][4] + '" readonly="readonly"/></td>' +
                                    '</tr>';
                                }
                            }
                            else
                            {
                                if(i == response.length - 1 )
                                {
                                    tableRow += '<td><input type="number" id="txtTotal" value="0" readonly="readonly"/></td>' +
                                   '</tr>';
                                }
                                else
                                {
                                    tableRow += '<td><input type="number" class="txt-squar" onchange="calculateTotal()" value="0" readonly="readonly"/></td>' +
                                   '</tr>';
                                }
                            }

                            $("#allownceTable").find('tbody').append(tableRow);
                            allownceCount++;
                        }
                    }
                 );

            //}
        //}

    }

    
    function calculateTotal()
    {
        var txtList = document.getElementsByClassName("txt-squar");
        var i;
        var total  = 0;
        for (i = 0; i < txtList.length; i++) {
            total += parseInt(txtList[i].value, 10);
        }
        document.getElementById('txtTotal').value = total;
        //alert(total);
    }

    function SaveChallanDetail()
    {
        debugger;
        var detailList = [];
        var rowCount = document.getElementById("allownceTable").rows.length;
        var txtList = document.getElementsByClassName("txt-squar");
        var objCount = 0;
        var i = 0;
        for (i = 1; i < rowCount - 1; i++){
            var rowData = document.getElementById("allownceTable").rows[i].cells;

            var headId = rowData[2].innerHTML;
            var type = rowData[1].innerHTML;
            var totalAmount = rowData[4].innerHTML;
            if(totalAmount.length > 0)
            {
                //alert(campusName)
                var detail = {
                    FeeHeadId: headId,
                    TotalAmount : totalAmount,
                    PayAmount: txtList[objCount].value,
                    Type: type
                };
                detailList[objCount] = detail;
                objCount++;
            }
        }
        $.ajax({
            url: AppDetail() + '/IssueChalan/SaveIssueChallanDetail',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: JSON.stringify(detailList),// JSON.stringify(tagsList) },//JSON.stringify({ 'tagsList': tagsList }),
            statusCode: {
                200: function () {
                },
                500: function () {
                }
            },
            jsonp: 'jsonp'
        });


    }

    function ChangeAccountType()
    {
        var accountTypeId = $("#accountTypeId").val();
        var branchId = $("#BranchId").val();
        if(accountTypeId == 1)
        {
            accountTypeId = 13;
        }
        else
        {
            accountTypeId = 14;
        }
        $.ajax({
            type: "GET",
            url: AppDetail() + '/api/Common/getFinanceAccount?typeId=' + accountTypeId + '&&branchId=' + branchId + '&&isLoadAll=1',
            contentType: 'application/json',
            success: function (result) {
                $("#financeAccountId").html(result);
            },
            error: function (res) {
                showNotification('Unable to load account', 'Error', 'Error')
            }
        });
    }
</script>
@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@*@section Scripts {
        @Scripts.Render("bundles/jqueryval")
    }*@
