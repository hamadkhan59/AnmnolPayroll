@model SMS_DAL.Item

@{
    ViewBag.Title = "Index";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title sc_panel_header">
                <label class="nav navbar-left control-label sc_panel_label">Item @((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "Edit" : "Create")</label>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        @*<a class="collapse-link"><i class="fa fa-chevron-up"></i></a>*@
                    </li>
                    <li>
                        @*<a class="close-link"><i class="fa fa-close"></i></a>*@
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div hidden="hidden">@Html.ValidationSummary(false)</div>
                    @*<form id="demo-form2" data-parsley-validate="" class="form-horizontal form-label-left" novalidate="">*@
                    <fieldset>
                      

                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Item Unit
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.DropDownList("ItemUnit.Id", (IEnumerable<SelectListItem>)ViewBag.UnitId, new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="first-name">
                                Name <span class="required annotation">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextBoxFor(model => model.ItemName, new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" style="font-size: 11px;" align="right" for="last-name">
                                Description
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div>
                                    @Html.TextAreaFor(model => model.ItemDescription, 3, 25, new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>
                        

                        <div class="ln_solid"></div>
                        <div class="col-md-9 col-sm-9 col-xs-12">
                            <div class="nav navbar-right">
                                <input type="submit" value="Save" name="Create" class="btn btn-squar"
                                       style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:none;" : "display:block;") />
                                <input type="submit" value="Save" name="Update" class="btn btn-squar"
                                       style=@((ViewData["Operation"] != null && Convert.ToInt32(ViewData["Operation"]) > 0) ? "display:block;" : "display:none;") />
                            </div>
                        </div>

                    </fieldset>
                    @*</form>*@
                }
            </div>
        </div>
    </div>
</div>
 

<div class="x_panel">
    <div class="x_title sc_panel_header">
        <label class="nav navbar-left control-label sc_panel_label">Items List </label>
        <div class="clearfix"></div>
    </div>

    <div class="x_content">

        <div class="form-group">
            <div class="table-responsive">
                <table class="table table-striped table-bordered" id="classTable">
                    <thead>
                        <tr class="headings">
                            <th>
                                Name
                            </th>
                            <th>
                                Unit
                            </th>
                            <th>
                                Description
                            </th>
                            <th>
                                Actions
                            </th>

                        </tr>

                    </thead>
                    <tbody style="background-color:white;color:#2A3F54" id="classBody">
                        @if (ViewData["item"] != null)
                        {
                            foreach (var item in (IEnumerable<SMS_DAL.ViewModel.ItemModel>)ViewData["item"])
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ItemName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.UnitName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ItemDescription)
                                    </td>
                                    <td>
                                        @Html.ActionLink("  ", "Index", new { id = item.Id }, new { style = "color: green; font-size: 20px; margin-left: 10px", title = "Edit", @class = "glyphicon glyphicon-edit" })
                                        @Html.ActionLink("  ", "ItemVendor", new { id = item.Id }, new { style = "color: black; font-size: 20px; margin-left: 10px", title = "Item Vendors", @class = "glyphicon glyphicon-asterisk" }) 
                                        @Html.ActionLink("  ", "Delete", new { id = item.Id }, new { onclick = "return ConfirmDelete('Are you sure you wish to delete this Item?', " + item.Id + ", 'Item');", style = "color: darkred;font-size: 15px;margin-left: 10px", title = "Delete", @class = "glyphicon glyphicon-trash" })
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>

    function populateErrors()
    {
        @if (!Html.ViewData.ModelState.IsValid)
        {
            <text> populateValidationErrors()  </text>
        }

        @if(ViewData["Error"] != null)
       {
           if ((int)@ViewData["Error"] == 2)
           {
               <text> showNotification('Item is saved succesfully.', 'Success', 'Success') </text>
           }
       else if ((int)@ViewData["Error"] == 11)
           {
               <text> showNotification('Item is already added.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 420)
           {
               <text> showNotification('Unable to Save Item.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 3)
           {
               <text> showNotification('Unable to delete Item.', 'Error', 'Error') </text>
           }
           else if ((int)@ViewData["Error"] == 1)
           {
               <text> showNotification('The Name Field is Required.', 'Error', 'Error') </text>
           }
       else if ((int)@ViewData["Error"] == 4)
           {
               <text> showNotification('Item is deleted succesfully.', 'Success', 'Success') </text>
           }
       }
    }

    window.onload = function (e) {
        populateErrors();
        $('#classTable').DataTable();
    }

</script>